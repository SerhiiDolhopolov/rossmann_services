2025.05.21 19:29:39.206624 [ 82 ] {} <Warning> Application: Listen [0.0.0.0]:9009 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:9009 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 19:29:39.222000 [ 82 ] {} <Warning> Access(local_directory): File /var/lib/clickhouse/access/users.list doesn't exist
2025.05.21 19:29:39.223299 [ 82 ] {} <Warning> Access(local_directory): Recovering lists in directory /var/lib/clickhouse/access/
2025.05.21 19:29:39.236118 [ 82 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2025.05.21 19:29:39.236796 [ 82 ] {} <Warning> Context: Delay accounting is not enabled, OSIOWaitMicroseconds will not be gathered. You can enable it using `echo 1 > /proc/sys/kernel/task_delayacct` or by using sysctl.
2025.05.21 19:29:39.469749 [ 82 ] {} <Warning> Application: Listen [0.0.0.0]:8123 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:8123 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 19:29:39.470134 [ 82 ] {} <Warning> Application: Listen [0.0.0.0]:9000 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:9000 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 19:29:39.470437 [ 82 ] {} <Warning> Application: Listen [0.0.0.0]:9004 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:9004 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 19:29:39.470706 [ 82 ] {} <Warning> Application: Listen [0.0.0.0]:9005 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:9005 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 19:29:42.851146 [ 1 ] {} <Warning> Application: Listen [::]:9009 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 19:29:42.862531 [ 1 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2025.05.21 19:29:42.863103 [ 1 ] {} <Warning> Context: Delay accounting is not enabled, OSIOWaitMicroseconds will not be gathered. You can enable it using `echo 1 > /proc/sys/kernel/task_delayacct` or by using sysctl.
2025.05.21 19:29:42.967573 [ 1 ] {} <Warning> Application: Listen [::]:8123 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 19:29:42.968263 [ 1 ] {} <Warning> Application: Listen [::]:9000 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 19:29:42.968807 [ 1 ] {} <Warning> Application: Listen [::]:9004 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 19:29:42.969427 [ 1 ] {} <Warning> Application: Listen [::]:9005 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 19:39:26.105297 [ 80 ] {} <Warning> Application: Listen [0.0.0.0]:9009 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:9009 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 19:39:26.124194 [ 80 ] {} <Warning> Access(local_directory): File /var/lib/clickhouse/access/users.list doesn't exist
2025.05.21 19:39:26.124504 [ 80 ] {} <Warning> Access(local_directory): Recovering lists in directory /var/lib/clickhouse/access/
2025.05.21 19:39:26.141259 [ 80 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2025.05.21 19:39:26.142168 [ 80 ] {} <Warning> Context: Delay accounting is not enabled, OSIOWaitMicroseconds will not be gathered. You can enable it using `echo 1 > /proc/sys/kernel/task_delayacct` or by using sysctl.
2025.05.21 19:39:26.333935 [ 80 ] {} <Warning> Application: Listen [0.0.0.0]:8123 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:8123 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 19:39:26.334421 [ 80 ] {} <Warning> Application: Listen [0.0.0.0]:9000 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:9000 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 19:39:26.335064 [ 80 ] {} <Warning> Application: Listen [0.0.0.0]:9004 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:9004 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 19:39:26.335704 [ 80 ] {} <Warning> Application: Listen [0.0.0.0]:9005 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:9005 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 19:39:30.919949 [ 1 ] {} <Warning> Application: Listen [::]:9009 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 19:39:30.940587 [ 1 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2025.05.21 19:39:30.941754 [ 1 ] {} <Warning> Context: Delay accounting is not enabled, OSIOWaitMicroseconds will not be gathered. You can enable it using `echo 1 > /proc/sys/kernel/task_delayacct` or by using sysctl.
2025.05.21 19:39:31.065158 [ 1 ] {} <Warning> Application: Listen [::]:8123 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 19:39:31.065585 [ 1 ] {} <Warning> Application: Listen [::]:9000 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 19:39:31.065861 [ 1 ] {} <Warning> Application: Listen [::]:9004 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 19:39:31.066164 [ 1 ] {} <Warning> Application: Listen [::]:9005 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 19:40:05.012773 [ 80 ] {} <Warning> Application: Listen [0.0.0.0]:9009 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:9009 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 19:40:05.018986 [ 80 ] {} <Warning> Access(local_directory): File /var/lib/clickhouse/access/users.list doesn't exist
2025.05.21 19:40:05.019280 [ 80 ] {} <Warning> Access(local_directory): Recovering lists in directory /var/lib/clickhouse/access/
2025.05.21 19:40:05.031906 [ 80 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2025.05.21 19:40:05.033065 [ 80 ] {} <Warning> Context: Delay accounting is not enabled, OSIOWaitMicroseconds will not be gathered. You can enable it using `echo 1 > /proc/sys/kernel/task_delayacct` or by using sysctl.
2025.05.21 19:40:05.168781 [ 80 ] {} <Warning> Application: Listen [0.0.0.0]:8123 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:8123 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 19:40:05.169247 [ 80 ] {} <Warning> Application: Listen [0.0.0.0]:9000 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:9000 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 19:40:05.169674 [ 80 ] {} <Warning> Application: Listen [0.0.0.0]:9004 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:9004 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 19:40:05.170345 [ 80 ] {} <Warning> Application: Listen [0.0.0.0]:9005 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:9005 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 19:40:07.650184 [ 1 ] {} <Warning> Application: Listen [::]:9009 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 19:40:07.662688 [ 1 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2025.05.21 19:40:07.663299 [ 1 ] {} <Warning> Context: Delay accounting is not enabled, OSIOWaitMicroseconds will not be gathered. You can enable it using `echo 1 > /proc/sys/kernel/task_delayacct` or by using sysctl.
2025.05.21 19:40:07.759776 [ 1 ] {} <Warning> Application: Listen [::]:8123 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 19:40:07.760187 [ 1 ] {} <Warning> Application: Listen [::]:9000 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 19:40:07.760525 [ 1 ] {} <Warning> Application: Listen [::]:9004 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 19:40:07.760840 [ 1 ] {} <Warning> Application: Listen [::]:9005 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 19:40:49.183268 [ 84 ] {} <Warning> Application: Listen [0.0.0.0]:9009 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:9009 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 19:40:49.189460 [ 84 ] {} <Warning> Access(local_directory): File /var/lib/clickhouse/access/users.list doesn't exist
2025.05.21 19:40:49.189894 [ 84 ] {} <Warning> Access(local_directory): Recovering lists in directory /var/lib/clickhouse/access/
2025.05.21 19:40:49.204822 [ 84 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2025.05.21 19:40:49.206168 [ 84 ] {} <Warning> Context: Delay accounting is not enabled, OSIOWaitMicroseconds will not be gathered. You can enable it using `echo 1 > /proc/sys/kernel/task_delayacct` or by using sysctl.
2025.05.21 19:40:49.496805 [ 84 ] {} <Warning> Application: Listen [0.0.0.0]:8123 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:8123 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 19:40:49.497233 [ 84 ] {} <Warning> Application: Listen [0.0.0.0]:9000 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:9000 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 19:40:49.497670 [ 84 ] {} <Warning> Application: Listen [0.0.0.0]:9004 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:9004 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 19:40:49.498009 [ 84 ] {} <Warning> Application: Listen [0.0.0.0]:9005 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:9005 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 19:40:52.951222 [ 1 ] {} <Warning> Application: Listen [::]:9009 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 19:40:52.967021 [ 1 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2025.05.21 19:40:52.967845 [ 1 ] {} <Warning> Context: Delay accounting is not enabled, OSIOWaitMicroseconds will not be gathered. You can enable it using `echo 1 > /proc/sys/kernel/task_delayacct` or by using sysctl.
2025.05.21 19:40:53.072452 [ 1 ] {} <Warning> Application: Listen [::]:8123 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 19:40:53.072935 [ 1 ] {} <Warning> Application: Listen [::]:9000 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 19:40:53.073492 [ 1 ] {} <Warning> Application: Listen [::]:9004 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 19:40:53.076958 [ 1 ] {} <Warning> Application: Listen [::]:9005 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 21:17:39.471904 [ 1 ] {} <Warning> Application: Listen [::]:9009 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 21:17:39.495581 [ 1 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2025.05.21 21:17:39.496711 [ 1 ] {} <Warning> Context: Delay accounting is not enabled, OSIOWaitMicroseconds will not be gathered. You can enable it using `echo 1 > /proc/sys/kernel/task_delayacct` or by using sysctl.
2025.05.21 21:17:40.328509 [ 1 ] {} <Warning> Application: Listen [::]:8123 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 21:17:40.336097 [ 1 ] {} <Warning> Application: Listen [::]:9000 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 21:17:40.339680 [ 1 ] {} <Warning> Application: Listen [::]:9004 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 21:17:40.368524 [ 1 ] {} <Warning> Application: Listen [::]:9005 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 21:39:09.174885 [ 1 ] {} <Warning> Application: Listen [::]:9009 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 21:39:09.194739 [ 1 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2025.05.21 21:39:09.195808 [ 1 ] {} <Warning> Context: Delay accounting is not enabled, OSIOWaitMicroseconds will not be gathered. You can enable it using `echo 1 > /proc/sys/kernel/task_delayacct` or by using sysctl.
2025.05.21 21:39:09.321542 [ 722 ] {} <Warning> system.asynchronous_metric_log (fcb4afa6-918b-431c-b225-49cc973fcdfa): Removing temporary directory /var/lib/clickhouse/store/fcb/fcb4afa6-918b-431c-b225-49cc973fcdfa/tmp_merge_202505_1_938_496/
2025.05.21 21:39:09.776791 [ 1 ] {} <Warning> Application: Listen [::]:8123 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 21:39:09.780840 [ 1 ] {} <Warning> Application: Listen [::]:9000 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 21:39:09.785683 [ 1 ] {} <Warning> Application: Listen [::]:9004 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 21:39:09.786150 [ 1 ] {} <Warning> Application: Listen [::]:9005 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 21:47:04.752484 [ 82 ] {669c7bad-dff3-4223-9b70-6d1577c6fd7c} <Error> executeQuery: Code: 60. DB::Exception: Table delivery.delivery_report does not exist. (UNKNOWN_TABLE) (version 25.4.4.25 (official build)) (from 172.18.0.16:35174) (in query:  INSERT INTO delivery_report ( shop_id, country, city, admin_id, courier_id, product_id, product_name, category_id, category_name, quantity, accepted_time ) VALUES ), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<String, String>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<String>::type>, String&&, String&&) @ 0x0000000009c765ab
3. DB::IDatabase::getTable(String const&, std::shared_ptr<DB::Context const>) const @ 0x000000001263268d
4. DB::DatabaseCatalog::getTableImpl(DB::StorageID const&, std::shared_ptr<DB::Context const>, std::optional<DB::Exception>*) const @ 0x00000000130c84d0
5. DB::DatabaseCatalog::getTable(DB::StorageID const&, std::shared_ptr<DB::Context const>) const @ 0x00000000130d1589
6. DB::InterpreterInsertQuery::getInsertColumnNames() const @ 0x00000000131eec08
7. DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&) @ 0x000000001359b2f0
8. DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x0000000013594766
9. DB::TCPHandler::runImpl() @ 0x00000000148f5afe
10. DB::TCPHandler::run() @ 0x00000000149147f9
11. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
12. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
13. Poco::PooledThread::run() @ 0x0000000017fe753b
14. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
15. ? @ 0x00007f6893038ac3
16. ? @ 0x00007f68930ca850

2025.05.21 21:47:04.755145 [ 82 ] {} <Error> TCPHandler: Code: 60. DB::Exception: Table delivery.delivery_report does not exist. (UNKNOWN_TABLE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<String, String>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<String>::type>, String&&, String&&) @ 0x0000000009c765ab
3. DB::IDatabase::getTable(String const&, std::shared_ptr<DB::Context const>) const @ 0x000000001263268d
4. DB::DatabaseCatalog::getTableImpl(DB::StorageID const&, std::shared_ptr<DB::Context const>, std::optional<DB::Exception>*) const @ 0x00000000130c84d0
5. DB::DatabaseCatalog::getTable(DB::StorageID const&, std::shared_ptr<DB::Context const>) const @ 0x00000000130d1589
6. DB::InterpreterInsertQuery::getInsertColumnNames() const @ 0x00000000131eec08
7. DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&) @ 0x000000001359b2f0
8. DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x0000000013594766
9. DB::TCPHandler::runImpl() @ 0x00000000148f5afe
10. DB::TCPHandler::run() @ 0x00000000149147f9
11. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
12. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
13. Poco::PooledThread::run() @ 0x0000000017fe753b
14. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
15. ? @ 0x00007f6893038ac3
16. ? @ 0x00007f68930ca850

2025.05.21 21:47:04.758118 [ 84 ] {5be95220-d999-47ac-966a-512c5635118a} <Error> executeQuery: Code: 60. DB::Exception: Table delivery.delivery_report does not exist. (UNKNOWN_TABLE) (version 25.4.4.25 (official build)) (from 172.18.0.17:47660) (in query:  INSERT INTO delivery_report ( shop_id, country, city, admin_id, courier_id, product_id, product_name, category_id, category_name, quantity, accepted_time ) VALUES ), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<String, String>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<String>::type>, String&&, String&&) @ 0x0000000009c765ab
3. DB::IDatabase::getTable(String const&, std::shared_ptr<DB::Context const>) const @ 0x000000001263268d
4. DB::DatabaseCatalog::getTableImpl(DB::StorageID const&, std::shared_ptr<DB::Context const>, std::optional<DB::Exception>*) const @ 0x00000000130c84d0
5. DB::DatabaseCatalog::getTable(DB::StorageID const&, std::shared_ptr<DB::Context const>) const @ 0x00000000130d1589
6. DB::InterpreterInsertQuery::getInsertColumnNames() const @ 0x00000000131eec08
7. DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&) @ 0x000000001359b2f0
8. DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x0000000013594766
9. DB::TCPHandler::runImpl() @ 0x00000000148f5afe
10. DB::TCPHandler::run() @ 0x00000000149147f9
11. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
12. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
13. Poco::PooledThread::run() @ 0x0000000017fe753b
14. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
15. ? @ 0x00007f6893038ac3
16. ? @ 0x00007f68930ca850

2025.05.21 21:47:04.759394 [ 84 ] {} <Error> TCPHandler: Code: 60. DB::Exception: Table delivery.delivery_report does not exist. (UNKNOWN_TABLE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<String, String>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<String>::type>, String&&, String&&) @ 0x0000000009c765ab
3. DB::IDatabase::getTable(String const&, std::shared_ptr<DB::Context const>) const @ 0x000000001263268d
4. DB::DatabaseCatalog::getTableImpl(DB::StorageID const&, std::shared_ptr<DB::Context const>, std::optional<DB::Exception>*) const @ 0x00000000130c84d0
5. DB::DatabaseCatalog::getTable(DB::StorageID const&, std::shared_ptr<DB::Context const>) const @ 0x00000000130d1589
6. DB::InterpreterInsertQuery::getInsertColumnNames() const @ 0x00000000131eec08
7. DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&) @ 0x000000001359b2f0
8. DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x0000000013594766
9. DB::TCPHandler::runImpl() @ 0x00000000148f5afe
10. DB::TCPHandler::run() @ 0x00000000149147f9
11. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
12. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
13. Poco::PooledThread::run() @ 0x0000000017fe753b
14. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
15. ? @ 0x00007f6893038ac3
16. ? @ 0x00007f68930ca850

2025.05.21 21:47:04.788878 [ 84 ] {7f6e045d-fc8f-44e6-bab0-c0c39d1a3f46} <Error> executeQuery: Code: 60. DB::Exception: Table delivery.delivery_report does not exist. (UNKNOWN_TABLE) (version 25.4.4.25 (official build)) (from 172.18.0.15:60572) (in query:  INSERT INTO delivery_report ( shop_id, country, city, admin_id, courier_id, product_id, product_name, category_id, category_name, quantity, accepted_time ) VALUES ), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<String, String>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<String>::type>, String&&, String&&) @ 0x0000000009c765ab
3. DB::IDatabase::getTable(String const&, std::shared_ptr<DB::Context const>) const @ 0x000000001263268d
4. DB::DatabaseCatalog::getTableImpl(DB::StorageID const&, std::shared_ptr<DB::Context const>, std::optional<DB::Exception>*) const @ 0x00000000130c84d0
5. DB::DatabaseCatalog::getTable(DB::StorageID const&, std::shared_ptr<DB::Context const>) const @ 0x00000000130d1589
6. DB::InterpreterInsertQuery::getInsertColumnNames() const @ 0x00000000131eec08
7. DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&) @ 0x000000001359b2f0
8. DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x0000000013594766
9. DB::TCPHandler::runImpl() @ 0x00000000148f5afe
10. DB::TCPHandler::run() @ 0x00000000149147f9
11. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
12. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
13. Poco::PooledThread::run() @ 0x0000000017fe753b
14. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
15. ? @ 0x00007f6893038ac3
16. ? @ 0x00007f68930ca850

2025.05.21 21:47:04.790087 [ 84 ] {} <Error> TCPHandler: Code: 60. DB::Exception: Table delivery.delivery_report does not exist. (UNKNOWN_TABLE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<String, String>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<String>::type>, String&&, String&&) @ 0x0000000009c765ab
3. DB::IDatabase::getTable(String const&, std::shared_ptr<DB::Context const>) const @ 0x000000001263268d
4. DB::DatabaseCatalog::getTableImpl(DB::StorageID const&, std::shared_ptr<DB::Context const>, std::optional<DB::Exception>*) const @ 0x00000000130c84d0
5. DB::DatabaseCatalog::getTable(DB::StorageID const&, std::shared_ptr<DB::Context const>) const @ 0x00000000130d1589
6. DB::InterpreterInsertQuery::getInsertColumnNames() const @ 0x00000000131eec08
7. DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&) @ 0x000000001359b2f0
8. DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x0000000013594766
9. DB::TCPHandler::runImpl() @ 0x00000000148f5afe
10. DB::TCPHandler::run() @ 0x00000000149147f9
11. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
12. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
13. Poco::PooledThread::run() @ 0x0000000017fe753b
14. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
15. ? @ 0x00007f6893038ac3
16. ? @ 0x00007f68930ca850

2025.05.21 21:47:12.058392 [ 84 ] {fce4231b-ef2d-48cb-8418-2a3907a38399} <Error> executeQuery: Code: 60. DB::Exception: Table delivery.delivery_report does not exist. (UNKNOWN_TABLE) (version 25.4.4.25 (official build)) (from 172.18.0.15:60574) (in query:  INSERT INTO delivery_report ( shop_id, country, city, admin_id, courier_id, product_id, product_name, category_id, category_name, quantity, accepted_time ) VALUES ), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<String, String>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<String>::type>, String&&, String&&) @ 0x0000000009c765ab
3. DB::IDatabase::getTable(String const&, std::shared_ptr<DB::Context const>) const @ 0x000000001263268d
4. DB::DatabaseCatalog::getTableImpl(DB::StorageID const&, std::shared_ptr<DB::Context const>, std::optional<DB::Exception>*) const @ 0x00000000130c84d0
5. DB::DatabaseCatalog::getTable(DB::StorageID const&, std::shared_ptr<DB::Context const>) const @ 0x00000000130d1589
6. DB::InterpreterInsertQuery::getInsertColumnNames() const @ 0x00000000131eec08
7. DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&) @ 0x000000001359b2f0
8. DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x0000000013594766
9. DB::TCPHandler::runImpl() @ 0x00000000148f5afe
10. DB::TCPHandler::run() @ 0x00000000149147f9
11. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
12. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
13. Poco::PooledThread::run() @ 0x0000000017fe753b
14. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
15. ? @ 0x00007f6893038ac3
16. ? @ 0x00007f68930ca850

2025.05.21 21:47:12.059439 [ 84 ] {} <Error> TCPHandler: Code: 60. DB::Exception: Table delivery.delivery_report does not exist. (UNKNOWN_TABLE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<String, String>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<String>::type>, String&&, String&&) @ 0x0000000009c765ab
3. DB::IDatabase::getTable(String const&, std::shared_ptr<DB::Context const>) const @ 0x000000001263268d
4. DB::DatabaseCatalog::getTableImpl(DB::StorageID const&, std::shared_ptr<DB::Context const>, std::optional<DB::Exception>*) const @ 0x00000000130c84d0
5. DB::DatabaseCatalog::getTable(DB::StorageID const&, std::shared_ptr<DB::Context const>) const @ 0x00000000130d1589
6. DB::InterpreterInsertQuery::getInsertColumnNames() const @ 0x00000000131eec08
7. DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&) @ 0x000000001359b2f0
8. DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x0000000013594766
9. DB::TCPHandler::runImpl() @ 0x00000000148f5afe
10. DB::TCPHandler::run() @ 0x00000000149147f9
11. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
12. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
13. Poco::PooledThread::run() @ 0x0000000017fe753b
14. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
15. ? @ 0x00007f6893038ac3
16. ? @ 0x00007f68930ca850

2025.05.21 21:47:12.204763 [ 84 ] {9e416280-cfa8-4934-be63-247308b2c8f0} <Error> executeQuery: Code: 60. DB::Exception: Table delivery.delivery_report does not exist. (UNKNOWN_TABLE) (version 25.4.4.25 (official build)) (from 172.18.0.16:35180) (in query:  INSERT INTO delivery_report ( shop_id, country, city, admin_id, courier_id, product_id, product_name, category_id, category_name, quantity, accepted_time ) VALUES ), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<String, String>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<String>::type>, String&&, String&&) @ 0x0000000009c765ab
3. DB::IDatabase::getTable(String const&, std::shared_ptr<DB::Context const>) const @ 0x000000001263268d
4. DB::DatabaseCatalog::getTableImpl(DB::StorageID const&, std::shared_ptr<DB::Context const>, std::optional<DB::Exception>*) const @ 0x00000000130c84d0
5. DB::DatabaseCatalog::getTable(DB::StorageID const&, std::shared_ptr<DB::Context const>) const @ 0x00000000130d1589
6. DB::InterpreterInsertQuery::getInsertColumnNames() const @ 0x00000000131eec08
7. DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&) @ 0x000000001359b2f0
8. DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x0000000013594766
9. DB::TCPHandler::runImpl() @ 0x00000000148f5afe
10. DB::TCPHandler::run() @ 0x00000000149147f9
11. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
12. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
13. Poco::PooledThread::run() @ 0x0000000017fe753b
14. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
15. ? @ 0x00007f6893038ac3
16. ? @ 0x00007f68930ca850

2025.05.21 21:47:12.205829 [ 84 ] {} <Error> TCPHandler: Code: 60. DB::Exception: Table delivery.delivery_report does not exist. (UNKNOWN_TABLE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<String, String>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<String>::type>, String&&, String&&) @ 0x0000000009c765ab
3. DB::IDatabase::getTable(String const&, std::shared_ptr<DB::Context const>) const @ 0x000000001263268d
4. DB::DatabaseCatalog::getTableImpl(DB::StorageID const&, std::shared_ptr<DB::Context const>, std::optional<DB::Exception>*) const @ 0x00000000130c84d0
5. DB::DatabaseCatalog::getTable(DB::StorageID const&, std::shared_ptr<DB::Context const>) const @ 0x00000000130d1589
6. DB::InterpreterInsertQuery::getInsertColumnNames() const @ 0x00000000131eec08
7. DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&) @ 0x000000001359b2f0
8. DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x0000000013594766
9. DB::TCPHandler::runImpl() @ 0x00000000148f5afe
10. DB::TCPHandler::run() @ 0x00000000149147f9
11. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
12. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
13. Poco::PooledThread::run() @ 0x0000000017fe753b
14. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
15. ? @ 0x00007f6893038ac3
16. ? @ 0x00007f68930ca850

2025.05.21 21:47:12.410510 [ 84 ] {4d86d2d5-b90a-468d-ad41-00b84c1af3ae} <Error> executeQuery: Code: 60. DB::Exception: Table delivery.delivery_report does not exist. (UNKNOWN_TABLE) (version 25.4.4.25 (official build)) (from 172.18.0.17:47676) (in query:  INSERT INTO delivery_report ( shop_id, country, city, admin_id, courier_id, product_id, product_name, category_id, category_name, quantity, accepted_time ) VALUES ), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<String, String>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<String>::type>, String&&, String&&) @ 0x0000000009c765ab
3. DB::IDatabase::getTable(String const&, std::shared_ptr<DB::Context const>) const @ 0x000000001263268d
4. DB::DatabaseCatalog::getTableImpl(DB::StorageID const&, std::shared_ptr<DB::Context const>, std::optional<DB::Exception>*) const @ 0x00000000130c84d0
5. DB::DatabaseCatalog::getTable(DB::StorageID const&, std::shared_ptr<DB::Context const>) const @ 0x00000000130d1589
6. DB::InterpreterInsertQuery::getInsertColumnNames() const @ 0x00000000131eec08
7. DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&) @ 0x000000001359b2f0
8. DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x0000000013594766
9. DB::TCPHandler::runImpl() @ 0x00000000148f5afe
10. DB::TCPHandler::run() @ 0x00000000149147f9
11. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
12. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
13. Poco::PooledThread::run() @ 0x0000000017fe753b
14. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
15. ? @ 0x00007f6893038ac3
16. ? @ 0x00007f68930ca850

2025.05.21 21:47:12.411580 [ 84 ] {} <Error> TCPHandler: Code: 60. DB::Exception: Table delivery.delivery_report does not exist. (UNKNOWN_TABLE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<String, String>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<String>::type>, String&&, String&&) @ 0x0000000009c765ab
3. DB::IDatabase::getTable(String const&, std::shared_ptr<DB::Context const>) const @ 0x000000001263268d
4. DB::DatabaseCatalog::getTableImpl(DB::StorageID const&, std::shared_ptr<DB::Context const>, std::optional<DB::Exception>*) const @ 0x00000000130c84d0
5. DB::DatabaseCatalog::getTable(DB::StorageID const&, std::shared_ptr<DB::Context const>) const @ 0x00000000130d1589
6. DB::InterpreterInsertQuery::getInsertColumnNames() const @ 0x00000000131eec08
7. DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&) @ 0x000000001359b2f0
8. DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x0000000013594766
9. DB::TCPHandler::runImpl() @ 0x00000000148f5afe
10. DB::TCPHandler::run() @ 0x00000000149147f9
11. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
12. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
13. Poco::PooledThread::run() @ 0x0000000017fe753b
14. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
15. ? @ 0x00007f6893038ac3
16. ? @ 0x00007f68930ca850

2025.05.21 21:47:17.945061 [ 84 ] {a5f14c77-b345-492f-a45d-78e055abb709} <Error> executeQuery: Code: 60. DB::Exception: Table delivery.delivery_report does not exist. (UNKNOWN_TABLE) (version 25.4.4.25 (official build)) (from 172.18.0.15:53294) (in query:  INSERT INTO delivery_report ( shop_id, country, city, admin_id, courier_id, product_id, product_name, category_id, category_name, quantity, accepted_time ) VALUES ), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<String, String>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<String>::type>, String&&, String&&) @ 0x0000000009c765ab
3. DB::IDatabase::getTable(String const&, std::shared_ptr<DB::Context const>) const @ 0x000000001263268d
4. DB::DatabaseCatalog::getTableImpl(DB::StorageID const&, std::shared_ptr<DB::Context const>, std::optional<DB::Exception>*) const @ 0x00000000130c84d0
5. DB::DatabaseCatalog::getTable(DB::StorageID const&, std::shared_ptr<DB::Context const>) const @ 0x00000000130d1589
6. DB::InterpreterInsertQuery::getInsertColumnNames() const @ 0x00000000131eec08
7. DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&) @ 0x000000001359b2f0
8. DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x0000000013594766
9. DB::TCPHandler::runImpl() @ 0x00000000148f5afe
10. DB::TCPHandler::run() @ 0x00000000149147f9
11. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
12. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
13. Poco::PooledThread::run() @ 0x0000000017fe753b
14. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
15. ? @ 0x00007f6893038ac3
16. ? @ 0x00007f68930ca850

2025.05.21 21:47:17.946543 [ 84 ] {} <Error> TCPHandler: Code: 60. DB::Exception: Table delivery.delivery_report does not exist. (UNKNOWN_TABLE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<String, String>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<String>::type>, String&&, String&&) @ 0x0000000009c765ab
3. DB::IDatabase::getTable(String const&, std::shared_ptr<DB::Context const>) const @ 0x000000001263268d
4. DB::DatabaseCatalog::getTableImpl(DB::StorageID const&, std::shared_ptr<DB::Context const>, std::optional<DB::Exception>*) const @ 0x00000000130c84d0
5. DB::DatabaseCatalog::getTable(DB::StorageID const&, std::shared_ptr<DB::Context const>) const @ 0x00000000130d1589
6. DB::InterpreterInsertQuery::getInsertColumnNames() const @ 0x00000000131eec08
7. DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&) @ 0x000000001359b2f0
8. DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x0000000013594766
9. DB::TCPHandler::runImpl() @ 0x00000000148f5afe
10. DB::TCPHandler::run() @ 0x00000000149147f9
11. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
12. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
13. Poco::PooledThread::run() @ 0x0000000017fe753b
14. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
15. ? @ 0x00007f6893038ac3
16. ? @ 0x00007f68930ca850

2025.05.21 21:47:18.088594 [ 84 ] {c431cc17-f270-42cb-885c-f57a34f54ffa} <Error> executeQuery: Code: 60. DB::Exception: Table delivery.delivery_report does not exist. (UNKNOWN_TABLE) (version 25.4.4.25 (official build)) (from 172.18.0.16:43760) (in query:  INSERT INTO delivery_report ( shop_id, country, city, admin_id, courier_id, product_id, product_name, category_id, category_name, quantity, accepted_time ) VALUES ), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<String, String>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<String>::type>, String&&, String&&) @ 0x0000000009c765ab
3. DB::IDatabase::getTable(String const&, std::shared_ptr<DB::Context const>) const @ 0x000000001263268d
4. DB::DatabaseCatalog::getTableImpl(DB::StorageID const&, std::shared_ptr<DB::Context const>, std::optional<DB::Exception>*) const @ 0x00000000130c84d0
5. DB::DatabaseCatalog::getTable(DB::StorageID const&, std::shared_ptr<DB::Context const>) const @ 0x00000000130d1589
6. DB::InterpreterInsertQuery::getInsertColumnNames() const @ 0x00000000131eec08
7. DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&) @ 0x000000001359b2f0
8. DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x0000000013594766
9. DB::TCPHandler::runImpl() @ 0x00000000148f5afe
10. DB::TCPHandler::run() @ 0x00000000149147f9
11. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
12. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
13. Poco::PooledThread::run() @ 0x0000000017fe753b
14. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
15. ? @ 0x00007f6893038ac3
16. ? @ 0x00007f68930ca850

2025.05.21 21:47:18.089476 [ 84 ] {} <Error> TCPHandler: Code: 60. DB::Exception: Table delivery.delivery_report does not exist. (UNKNOWN_TABLE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<String, String>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<String>::type>, String&&, String&&) @ 0x0000000009c765ab
3. DB::IDatabase::getTable(String const&, std::shared_ptr<DB::Context const>) const @ 0x000000001263268d
4. DB::DatabaseCatalog::getTableImpl(DB::StorageID const&, std::shared_ptr<DB::Context const>, std::optional<DB::Exception>*) const @ 0x00000000130c84d0
5. DB::DatabaseCatalog::getTable(DB::StorageID const&, std::shared_ptr<DB::Context const>) const @ 0x00000000130d1589
6. DB::InterpreterInsertQuery::getInsertColumnNames() const @ 0x00000000131eec08
7. DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&) @ 0x000000001359b2f0
8. DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x0000000013594766
9. DB::TCPHandler::runImpl() @ 0x00000000148f5afe
10. DB::TCPHandler::run() @ 0x00000000149147f9
11. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
12. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
13. Poco::PooledThread::run() @ 0x0000000017fe753b
14. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
15. ? @ 0x00007f6893038ac3
16. ? @ 0x00007f68930ca850

2025.05.21 21:47:18.252086 [ 84 ] {ed568fea-932f-4df0-a3b4-4754563e9f9a} <Error> executeQuery: Code: 60. DB::Exception: Table delivery.delivery_report does not exist. (UNKNOWN_TABLE) (version 25.4.4.25 (official build)) (from 172.18.0.17:43104) (in query:  INSERT INTO delivery_report ( shop_id, country, city, admin_id, courier_id, product_id, product_name, category_id, category_name, quantity, accepted_time ) VALUES ), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<String, String>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<String>::type>, String&&, String&&) @ 0x0000000009c765ab
3. DB::IDatabase::getTable(String const&, std::shared_ptr<DB::Context const>) const @ 0x000000001263268d
4. DB::DatabaseCatalog::getTableImpl(DB::StorageID const&, std::shared_ptr<DB::Context const>, std::optional<DB::Exception>*) const @ 0x00000000130c84d0
5. DB::DatabaseCatalog::getTable(DB::StorageID const&, std::shared_ptr<DB::Context const>) const @ 0x00000000130d1589
6. DB::InterpreterInsertQuery::getInsertColumnNames() const @ 0x00000000131eec08
7. DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&) @ 0x000000001359b2f0
8. DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x0000000013594766
9. DB::TCPHandler::runImpl() @ 0x00000000148f5afe
10. DB::TCPHandler::run() @ 0x00000000149147f9
11. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
12. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
13. Poco::PooledThread::run() @ 0x0000000017fe753b
14. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
15. ? @ 0x00007f6893038ac3
16. ? @ 0x00007f68930ca850

2025.05.21 21:47:18.253610 [ 84 ] {} <Error> TCPHandler: Code: 60. DB::Exception: Table delivery.delivery_report does not exist. (UNKNOWN_TABLE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<String, String>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<String>::type>, String&&, String&&) @ 0x0000000009c765ab
3. DB::IDatabase::getTable(String const&, std::shared_ptr<DB::Context const>) const @ 0x000000001263268d
4. DB::DatabaseCatalog::getTableImpl(DB::StorageID const&, std::shared_ptr<DB::Context const>, std::optional<DB::Exception>*) const @ 0x00000000130c84d0
5. DB::DatabaseCatalog::getTable(DB::StorageID const&, std::shared_ptr<DB::Context const>) const @ 0x00000000130d1589
6. DB::InterpreterInsertQuery::getInsertColumnNames() const @ 0x00000000131eec08
7. DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&) @ 0x000000001359b2f0
8. DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x0000000013594766
9. DB::TCPHandler::runImpl() @ 0x00000000148f5afe
10. DB::TCPHandler::run() @ 0x00000000149147f9
11. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
12. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
13. Poco::PooledThread::run() @ 0x0000000017fe753b
14. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
15. ? @ 0x00007f6893038ac3
16. ? @ 0x00007f68930ca850

2025.05.21 21:47:24.189454 [ 84 ] {3da6138d-b2ea-43c0-ace3-272e99122f23} <Error> executeQuery: Code: 60. DB::Exception: Table delivery.delivery_report does not exist. (UNKNOWN_TABLE) (version 25.4.4.25 (official build)) (from 172.18.0.16:42476) (in query:  INSERT INTO delivery_report ( shop_id, country, city, admin_id, courier_id, product_id, product_name, category_id, category_name, quantity, accepted_time ) VALUES ), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<String, String>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<String>::type>, String&&, String&&) @ 0x0000000009c765ab
3. DB::IDatabase::getTable(String const&, std::shared_ptr<DB::Context const>) const @ 0x000000001263268d
4. DB::DatabaseCatalog::getTableImpl(DB::StorageID const&, std::shared_ptr<DB::Context const>, std::optional<DB::Exception>*) const @ 0x00000000130c84d0
5. DB::DatabaseCatalog::getTable(DB::StorageID const&, std::shared_ptr<DB::Context const>) const @ 0x00000000130d1589
6. DB::InterpreterInsertQuery::getInsertColumnNames() const @ 0x00000000131eec08
7. DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&) @ 0x000000001359b2f0
8. DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x0000000013594766
9. DB::TCPHandler::runImpl() @ 0x00000000148f5afe
10. DB::TCPHandler::run() @ 0x00000000149147f9
11. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
12. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
13. Poco::PooledThread::run() @ 0x0000000017fe753b
14. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
15. ? @ 0x00007f6893038ac3
16. ? @ 0x00007f68930ca850

2025.05.21 21:47:24.190875 [ 84 ] {} <Error> TCPHandler: Code: 60. DB::Exception: Table delivery.delivery_report does not exist. (UNKNOWN_TABLE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<String, String>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<String>::type>, String&&, String&&) @ 0x0000000009c765ab
3. DB::IDatabase::getTable(String const&, std::shared_ptr<DB::Context const>) const @ 0x000000001263268d
4. DB::DatabaseCatalog::getTableImpl(DB::StorageID const&, std::shared_ptr<DB::Context const>, std::optional<DB::Exception>*) const @ 0x00000000130c84d0
5. DB::DatabaseCatalog::getTable(DB::StorageID const&, std::shared_ptr<DB::Context const>) const @ 0x00000000130d1589
6. DB::InterpreterInsertQuery::getInsertColumnNames() const @ 0x00000000131eec08
7. DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&) @ 0x000000001359b2f0
8. DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x0000000013594766
9. DB::TCPHandler::runImpl() @ 0x00000000148f5afe
10. DB::TCPHandler::run() @ 0x00000000149147f9
11. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
12. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
13. Poco::PooledThread::run() @ 0x0000000017fe753b
14. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
15. ? @ 0x00007f6893038ac3
16. ? @ 0x00007f68930ca850

2025.05.21 21:47:24.324347 [ 84 ] {e26ba943-3fd4-4979-8ae2-5fdf861f936d} <Error> executeQuery: Code: 60. DB::Exception: Table delivery.delivery_report does not exist. (UNKNOWN_TABLE) (version 25.4.4.25 (official build)) (from 172.18.0.15:33076) (in query:  INSERT INTO delivery_report ( shop_id, country, city, admin_id, courier_id, product_id, product_name, category_id, category_name, quantity, accepted_time ) VALUES ), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<String, String>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<String>::type>, String&&, String&&) @ 0x0000000009c765ab
3. DB::IDatabase::getTable(String const&, std::shared_ptr<DB::Context const>) const @ 0x000000001263268d
4. DB::DatabaseCatalog::getTableImpl(DB::StorageID const&, std::shared_ptr<DB::Context const>, std::optional<DB::Exception>*) const @ 0x00000000130c84d0
5. DB::DatabaseCatalog::getTable(DB::StorageID const&, std::shared_ptr<DB::Context const>) const @ 0x00000000130d1589
6. DB::InterpreterInsertQuery::getInsertColumnNames() const @ 0x00000000131eec08
7. DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&) @ 0x000000001359b2f0
8. DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x0000000013594766
9. DB::TCPHandler::runImpl() @ 0x00000000148f5afe
10. DB::TCPHandler::run() @ 0x00000000149147f9
11. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
12. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
13. Poco::PooledThread::run() @ 0x0000000017fe753b
14. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
15. ? @ 0x00007f6893038ac3
16. ? @ 0x00007f68930ca850

2025.05.21 21:47:24.334068 [ 84 ] {} <Error> TCPHandler: Code: 60. DB::Exception: Table delivery.delivery_report does not exist. (UNKNOWN_TABLE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<String, String>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<String>::type>, String&&, String&&) @ 0x0000000009c765ab
3. DB::IDatabase::getTable(String const&, std::shared_ptr<DB::Context const>) const @ 0x000000001263268d
4. DB::DatabaseCatalog::getTableImpl(DB::StorageID const&, std::shared_ptr<DB::Context const>, std::optional<DB::Exception>*) const @ 0x00000000130c84d0
5. DB::DatabaseCatalog::getTable(DB::StorageID const&, std::shared_ptr<DB::Context const>) const @ 0x00000000130d1589
6. DB::InterpreterInsertQuery::getInsertColumnNames() const @ 0x00000000131eec08
7. DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&) @ 0x000000001359b2f0
8. DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x0000000013594766
9. DB::TCPHandler::runImpl() @ 0x00000000148f5afe
10. DB::TCPHandler::run() @ 0x00000000149147f9
11. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
12. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
13. Poco::PooledThread::run() @ 0x0000000017fe753b
14. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
15. ? @ 0x00007f6893038ac3
16. ? @ 0x00007f68930ca850

2025.05.21 21:47:24.334370 [ 82 ] {68400f48-953e-417a-9772-36b6bc41b0ce} <Error> executeQuery: Code: 60. DB::Exception: Table delivery.delivery_report does not exist. (UNKNOWN_TABLE) (version 25.4.4.25 (official build)) (from 172.18.0.17:56622) (in query:  INSERT INTO delivery_report ( shop_id, country, city, admin_id, courier_id, product_id, product_name, category_id, category_name, quantity, accepted_time ) VALUES ), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<String, String>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<String>::type>, String&&, String&&) @ 0x0000000009c765ab
3. DB::IDatabase::getTable(String const&, std::shared_ptr<DB::Context const>) const @ 0x000000001263268d
4. DB::DatabaseCatalog::getTableImpl(DB::StorageID const&, std::shared_ptr<DB::Context const>, std::optional<DB::Exception>*) const @ 0x00000000130c84d0
5. DB::DatabaseCatalog::getTable(DB::StorageID const&, std::shared_ptr<DB::Context const>) const @ 0x00000000130d1589
6. DB::InterpreterInsertQuery::getInsertColumnNames() const @ 0x00000000131eec08
7. DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&) @ 0x000000001359b2f0
8. DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x0000000013594766
9. DB::TCPHandler::runImpl() @ 0x00000000148f5afe
10. DB::TCPHandler::run() @ 0x00000000149147f9
11. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
12. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
13. Poco::PooledThread::run() @ 0x0000000017fe753b
14. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
15. ? @ 0x00007f6893038ac3
16. ? @ 0x00007f68930ca850

2025.05.21 21:47:24.344989 [ 82 ] {} <Error> TCPHandler: Code: 60. DB::Exception: Table delivery.delivery_report does not exist. (UNKNOWN_TABLE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<String, String>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<String>::type>, String&&, String&&) @ 0x0000000009c765ab
3. DB::IDatabase::getTable(String const&, std::shared_ptr<DB::Context const>) const @ 0x000000001263268d
4. DB::DatabaseCatalog::getTableImpl(DB::StorageID const&, std::shared_ptr<DB::Context const>, std::optional<DB::Exception>*) const @ 0x00000000130c84d0
5. DB::DatabaseCatalog::getTable(DB::StorageID const&, std::shared_ptr<DB::Context const>) const @ 0x00000000130d1589
6. DB::InterpreterInsertQuery::getInsertColumnNames() const @ 0x00000000131eec08
7. DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&) @ 0x000000001359b2f0
8. DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x0000000013594766
9. DB::TCPHandler::runImpl() @ 0x00000000148f5afe
10. DB::TCPHandler::run() @ 0x00000000149147f9
11. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
12. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
13. Poco::PooledThread::run() @ 0x0000000017fe753b
14. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
15. ? @ 0x00007f6893038ac3
16. ? @ 0x00007f68930ca850

2025.05.21 21:49:08.968218 [ 1 ] {} <Warning> Application: Listen [::]:9009 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 21:49:09.019643 [ 1 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2025.05.21 21:49:09.021083 [ 1 ] {} <Warning> Context: Delay accounting is not enabled, OSIOWaitMicroseconds will not be gathered. You can enable it using `echo 1 > /proc/sys/kernel/task_delayacct` or by using sysctl.
2025.05.21 21:49:09.131184 [ 743 ] {} <Warning> system.asynchronous_metric_log (fcb4afa6-918b-431c-b225-49cc973fcdfa): Removing temporary directory /var/lib/clickhouse/store/fcb/fcb4afa6-918b-431c-b225-49cc973fcdfa/tmp_merge_202505_1_1017_575/
2025.05.21 21:49:09.833871 [ 1 ] {} <Warning> Application: Listen [::]:8123 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 21:49:09.839402 [ 1 ] {} <Warning> Application: Listen [::]:9000 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 21:49:09.839805 [ 1 ] {} <Warning> Application: Listen [::]:9004 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 21:49:09.840108 [ 1 ] {} <Warning> Application: Listen [::]:9005 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 21:50:43.496319 [ 85 ] {} <Warning> Application: Listen [0.0.0.0]:9009 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:9009 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 21:50:43.502481 [ 85 ] {} <Warning> Access(local_directory): File /var/lib/clickhouse/access/users.list doesn't exist
2025.05.21 21:50:43.502799 [ 85 ] {} <Warning> Access(local_directory): Recovering lists in directory /var/lib/clickhouse/access/
2025.05.21 21:50:43.514590 [ 85 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2025.05.21 21:50:43.515646 [ 85 ] {} <Warning> Context: Delay accounting is not enabled, OSIOWaitMicroseconds will not be gathered. You can enable it using `echo 1 > /proc/sys/kernel/task_delayacct` or by using sysctl.
2025.05.21 21:50:43.662256 [ 85 ] {} <Warning> Application: Listen [0.0.0.0]:8123 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:8123 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 21:50:43.662692 [ 85 ] {} <Warning> Application: Listen [0.0.0.0]:9000 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:9000 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 21:50:43.662981 [ 85 ] {} <Warning> Application: Listen [0.0.0.0]:9004 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:9004 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 21:50:43.663291 [ 85 ] {} <Warning> Application: Listen [0.0.0.0]:9005 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:9005 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 21:50:45.256412 [ 1 ] {} <Warning> Application: Listen [::]:9009 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 21:50:45.278295 [ 1 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2025.05.21 21:50:45.279360 [ 1 ] {} <Warning> Context: Delay accounting is not enabled, OSIOWaitMicroseconds will not be gathered. You can enable it using `echo 1 > /proc/sys/kernel/task_delayacct` or by using sysctl.
2025.05.21 21:50:45.393788 [ 1 ] {} <Warning> Application: Listen [::]:8123 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 21:50:45.394363 [ 1 ] {} <Warning> Application: Listen [::]:9000 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 21:50:45.394894 [ 1 ] {} <Warning> Application: Listen [::]:9004 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 21:50:45.395480 [ 1 ] {} <Warning> Application: Listen [::]:9005 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 21:52:28.279363 [ 775 ] {55188c1b-586a-46c5-9963-4e4058c23a09} <Error> executeQuery: Code: 32. DB::Exception: Attempt to read after eof. (ATTEMPT_TO_READ_AFTER_EOF) (version 25.4.4.25 (official build)) (from 172.18.0.15:46850) (in query:  INSERT INTO reports ( shop_id, country, city, admin_id, courier_id, product_id, product_name, category_id, category_name, quantity, accepted_time ) VALUES ), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000009c833ab
3. DB::throwReadAfterEOF() @ 0x000000000f3add8f
4. DB::TCPHandler::receivePacketsExpectData(DB::QueryState&) @ 0x000000001490fbd5
5. DB::TCPHandler::processInsertQuery(DB::QueryState&) @ 0x0000000014905383
6. DB::TCPHandler::runImpl() @ 0x00000000148f5c48
7. DB::TCPHandler::run() @ 0x00000000149147f9
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f9b5ca27ac3
13. ? @ 0x00007f9b5cab9850

2025.05.21 21:52:28.327373 [ 775 ] {55188c1b-586a-46c5-9963-4e4058c23a09} <Error> TCPHandler: Can't send logs or exception to client. Close connection.: Code: 32. DB::Exception: Attempt to read after eof. (ATTEMPT_TO_READ_AFTER_EOF), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000009c833ab
3. DB::throwReadAfterEOF() @ 0x000000000f3add8f
4. DB::TCPHandler::receivePacketsExpectData(DB::QueryState&) @ 0x000000001490fbd5
5. DB::TCPHandler::skipData(DB::QueryState&) @ 0x0000000014906af0
6. DB::TCPHandler::runImpl() @ 0x00000000148f6cd1
7. DB::TCPHandler::run() @ 0x00000000149147f9
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f9b5ca27ac3
13. ? @ 0x00007f9b5cab9850
 (version 25.4.4.25 (official build))
2025.05.21 21:52:28.328986 [ 775 ] {} <Error> TCPHandler: Code: 32. DB::Exception: Attempt to read after eof. (ATTEMPT_TO_READ_AFTER_EOF), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000009c833ab
3. DB::throwReadAfterEOF() @ 0x000000000f3add8f
4. DB::TCPHandler::receivePacketsExpectData(DB::QueryState&) @ 0x000000001490fbd5
5. DB::TCPHandler::processInsertQuery(DB::QueryState&) @ 0x0000000014905383
6. DB::TCPHandler::runImpl() @ 0x00000000148f5c48
7. DB::TCPHandler::run() @ 0x00000000149147f9
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f9b5ca27ac3
13. ? @ 0x00007f9b5cab9850

2025.05.21 21:52:30.026267 [ 775 ] {d5640628-a6f1-46f9-9086-a22d43d6b342} <Error> executeQuery: Code: 32. DB::Exception: Attempt to read after eof. (ATTEMPT_TO_READ_AFTER_EOF) (version 25.4.4.25 (official build)) (from 172.18.0.16:38538) (in query:  INSERT INTO reports ( shop_id, country, city, admin_id, courier_id, product_id, product_name, category_id, category_name, quantity, accepted_time ) VALUES ), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000009c833ab
3. DB::throwReadAfterEOF() @ 0x000000000f3add8f
4. DB::TCPHandler::receivePacketsExpectData(DB::QueryState&) @ 0x000000001490fbd5
5. DB::TCPHandler::processInsertQuery(DB::QueryState&) @ 0x0000000014905383
6. DB::TCPHandler::runImpl() @ 0x00000000148f5c48
7. DB::TCPHandler::run() @ 0x00000000149147f9
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f9b5ca27ac3
13. ? @ 0x00007f9b5cab9850

2025.05.21 21:52:30.028804 [ 775 ] {d5640628-a6f1-46f9-9086-a22d43d6b342} <Error> TCPHandler: Can't send logs or exception to client. Close connection.: Code: 32. DB::Exception: Attempt to read after eof. (ATTEMPT_TO_READ_AFTER_EOF), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000009c833ab
3. DB::throwReadAfterEOF() @ 0x000000000f3add8f
4. DB::TCPHandler::receivePacketsExpectData(DB::QueryState&) @ 0x000000001490fbd5
5. DB::TCPHandler::skipData(DB::QueryState&) @ 0x0000000014906af0
6. DB::TCPHandler::runImpl() @ 0x00000000148f6cd1
7. DB::TCPHandler::run() @ 0x00000000149147f9
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f9b5ca27ac3
13. ? @ 0x00007f9b5cab9850
 (version 25.4.4.25 (official build))
2025.05.21 21:52:30.047708 [ 775 ] {} <Error> TCPHandler: Code: 32. DB::Exception: Attempt to read after eof. (ATTEMPT_TO_READ_AFTER_EOF), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000009c833ab
3. DB::throwReadAfterEOF() @ 0x000000000f3add8f
4. DB::TCPHandler::receivePacketsExpectData(DB::QueryState&) @ 0x000000001490fbd5
5. DB::TCPHandler::processInsertQuery(DB::QueryState&) @ 0x0000000014905383
6. DB::TCPHandler::runImpl() @ 0x00000000148f5c48
7. DB::TCPHandler::run() @ 0x00000000149147f9
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f9b5ca27ac3
13. ? @ 0x00007f9b5cab9850

2025.05.21 21:52:30.872947 [ 775 ] {7c4fe49e-e7e9-4acb-b399-9e907409d58f} <Error> executeQuery: Code: 32. DB::Exception: Attempt to read after eof. (ATTEMPT_TO_READ_AFTER_EOF) (version 25.4.4.25 (official build)) (from 172.18.0.17:53092) (in query:  INSERT INTO reports ( shop_id, country, city, admin_id, courier_id, product_id, product_name, category_id, category_name, quantity, accepted_time ) VALUES ), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000009c833ab
3. DB::throwReadAfterEOF() @ 0x000000000f3add8f
4. DB::TCPHandler::receivePacketsExpectData(DB::QueryState&) @ 0x000000001490fbd5
5. DB::TCPHandler::processInsertQuery(DB::QueryState&) @ 0x0000000014905383
6. DB::TCPHandler::runImpl() @ 0x00000000148f5c48
7. DB::TCPHandler::run() @ 0x00000000149147f9
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f9b5ca27ac3
13. ? @ 0x00007f9b5cab9850

2025.05.21 21:52:30.882364 [ 775 ] {7c4fe49e-e7e9-4acb-b399-9e907409d58f} <Error> TCPHandler: Can't send logs or exception to client. Close connection.: Code: 32. DB::Exception: Attempt to read after eof. (ATTEMPT_TO_READ_AFTER_EOF), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000009c833ab
3. DB::throwReadAfterEOF() @ 0x000000000f3add8f
4. DB::TCPHandler::receivePacketsExpectData(DB::QueryState&) @ 0x000000001490fbd5
5. DB::TCPHandler::skipData(DB::QueryState&) @ 0x0000000014906af0
6. DB::TCPHandler::runImpl() @ 0x00000000148f6cd1
7. DB::TCPHandler::run() @ 0x00000000149147f9
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f9b5ca27ac3
13. ? @ 0x00007f9b5cab9850
 (version 25.4.4.25 (official build))
2025.05.21 21:52:30.884264 [ 775 ] {} <Error> TCPHandler: Code: 32. DB::Exception: Attempt to read after eof. (ATTEMPT_TO_READ_AFTER_EOF), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000009c833ab
3. DB::throwReadAfterEOF() @ 0x000000000f3add8f
4. DB::TCPHandler::receivePacketsExpectData(DB::QueryState&) @ 0x000000001490fbd5
5. DB::TCPHandler::processInsertQuery(DB::QueryState&) @ 0x0000000014905383
6. DB::TCPHandler::runImpl() @ 0x00000000148f5c48
7. DB::TCPHandler::run() @ 0x00000000149147f9
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f9b5ca27ac3
13. ? @ 0x00007f9b5cab9850

2025.05.21 21:52:35.216142 [ 775 ] {e1fbc51d-7bf8-415a-9f71-3d440cd2b394} <Error> executeQuery: Code: 32. DB::Exception: Attempt to read after eof. (ATTEMPT_TO_READ_AFTER_EOF) (version 25.4.4.25 (official build)) (from 172.18.0.15:46864) (in query:  INSERT INTO reports ( shop_id, country, city, admin_id, courier_id, product_id, product_name, category_id, category_name, quantity, accepted_time ) VALUES ), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000009c833ab
3. DB::throwReadAfterEOF() @ 0x000000000f3add8f
4. DB::TCPHandler::receivePacketsExpectData(DB::QueryState&) @ 0x000000001490fbd5
5. DB::TCPHandler::processInsertQuery(DB::QueryState&) @ 0x0000000014905383
6. DB::TCPHandler::runImpl() @ 0x00000000148f5c48
7. DB::TCPHandler::run() @ 0x00000000149147f9
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f9b5ca27ac3
13. ? @ 0x00007f9b5cab9850

2025.05.21 21:52:35.218605 [ 775 ] {e1fbc51d-7bf8-415a-9f71-3d440cd2b394} <Error> TCPHandler: Can't send logs or exception to client. Close connection.: Code: 32. DB::Exception: Attempt to read after eof. (ATTEMPT_TO_READ_AFTER_EOF), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000009c833ab
3. DB::throwReadAfterEOF() @ 0x000000000f3add8f
4. DB::TCPHandler::receivePacketsExpectData(DB::QueryState&) @ 0x000000001490fbd5
5. DB::TCPHandler::skipData(DB::QueryState&) @ 0x0000000014906af0
6. DB::TCPHandler::runImpl() @ 0x00000000148f6cd1
7. DB::TCPHandler::run() @ 0x00000000149147f9
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f9b5ca27ac3
13. ? @ 0x00007f9b5cab9850
 (version 25.4.4.25 (official build))
2025.05.21 21:52:35.220165 [ 775 ] {} <Error> TCPHandler: Code: 32. DB::Exception: Attempt to read after eof. (ATTEMPT_TO_READ_AFTER_EOF), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000009c833ab
3. DB::throwReadAfterEOF() @ 0x000000000f3add8f
4. DB::TCPHandler::receivePacketsExpectData(DB::QueryState&) @ 0x000000001490fbd5
5. DB::TCPHandler::processInsertQuery(DB::QueryState&) @ 0x0000000014905383
6. DB::TCPHandler::runImpl() @ 0x00000000148f5c48
7. DB::TCPHandler::run() @ 0x00000000149147f9
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f9b5ca27ac3
13. ? @ 0x00007f9b5cab9850

2025.05.21 21:52:36.772671 [ 775 ] {e02df8b1-5af4-40e5-94ac-35acc0b71cd2} <Error> executeQuery: Code: 32. DB::Exception: Attempt to read after eof. (ATTEMPT_TO_READ_AFTER_EOF) (version 25.4.4.25 (official build)) (from 172.18.0.16:38542) (in query:  INSERT INTO reports ( shop_id, country, city, admin_id, courier_id, product_id, product_name, category_id, category_name, quantity, accepted_time ) VALUES ), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000009c833ab
3. DB::throwReadAfterEOF() @ 0x000000000f3add8f
4. DB::TCPHandler::receivePacketsExpectData(DB::QueryState&) @ 0x000000001490fbd5
5. DB::TCPHandler::processInsertQuery(DB::QueryState&) @ 0x0000000014905383
6. DB::TCPHandler::runImpl() @ 0x00000000148f5c48
7. DB::TCPHandler::run() @ 0x00000000149147f9
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f9b5ca27ac3
13. ? @ 0x00007f9b5cab9850

2025.05.21 21:52:36.779870 [ 775 ] {e02df8b1-5af4-40e5-94ac-35acc0b71cd2} <Error> TCPHandler: Can't send logs or exception to client. Close connection.: Code: 32. DB::Exception: Attempt to read after eof. (ATTEMPT_TO_READ_AFTER_EOF), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000009c833ab
3. DB::throwReadAfterEOF() @ 0x000000000f3add8f
4. DB::TCPHandler::receivePacketsExpectData(DB::QueryState&) @ 0x000000001490fbd5
5. DB::TCPHandler::skipData(DB::QueryState&) @ 0x0000000014906af0
6. DB::TCPHandler::runImpl() @ 0x00000000148f6cd1
7. DB::TCPHandler::run() @ 0x00000000149147f9
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f9b5ca27ac3
13. ? @ 0x00007f9b5cab9850
 (version 25.4.4.25 (official build))
2025.05.21 21:52:36.781122 [ 775 ] {} <Error> TCPHandler: Code: 32. DB::Exception: Attempt to read after eof. (ATTEMPT_TO_READ_AFTER_EOF), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000009c833ab
3. DB::throwReadAfterEOF() @ 0x000000000f3add8f
4. DB::TCPHandler::receivePacketsExpectData(DB::QueryState&) @ 0x000000001490fbd5
5. DB::TCPHandler::processInsertQuery(DB::QueryState&) @ 0x0000000014905383
6. DB::TCPHandler::runImpl() @ 0x00000000148f5c48
7. DB::TCPHandler::run() @ 0x00000000149147f9
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f9b5ca27ac3
13. ? @ 0x00007f9b5cab9850

2025.05.21 21:52:36.983011 [ 775 ] {3311c9cd-1370-4271-b879-4caaa224481f} <Error> executeQuery: Code: 32. DB::Exception: Attempt to read after eof. (ATTEMPT_TO_READ_AFTER_EOF) (version 25.4.4.25 (official build)) (from 172.18.0.17:53102) (in query:  INSERT INTO reports ( shop_id, country, city, admin_id, courier_id, product_id, product_name, category_id, category_name, quantity, accepted_time ) VALUES ), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000009c833ab
3. DB::throwReadAfterEOF() @ 0x000000000f3add8f
4. DB::TCPHandler::receivePacketsExpectData(DB::QueryState&) @ 0x000000001490fbd5
5. DB::TCPHandler::processInsertQuery(DB::QueryState&) @ 0x0000000014905383
6. DB::TCPHandler::runImpl() @ 0x00000000148f5c48
7. DB::TCPHandler::run() @ 0x00000000149147f9
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f9b5ca27ac3
13. ? @ 0x00007f9b5cab9850

2025.05.21 21:52:36.985727 [ 775 ] {3311c9cd-1370-4271-b879-4caaa224481f} <Error> TCPHandler: Can't send logs or exception to client. Close connection.: Code: 32. DB::Exception: Attempt to read after eof. (ATTEMPT_TO_READ_AFTER_EOF), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000009c833ab
3. DB::throwReadAfterEOF() @ 0x000000000f3add8f
4. DB::TCPHandler::receivePacketsExpectData(DB::QueryState&) @ 0x000000001490fbd5
5. DB::TCPHandler::skipData(DB::QueryState&) @ 0x0000000014906af0
6. DB::TCPHandler::runImpl() @ 0x00000000148f6cd1
7. DB::TCPHandler::run() @ 0x00000000149147f9
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f9b5ca27ac3
13. ? @ 0x00007f9b5cab9850
 (version 25.4.4.25 (official build))
2025.05.21 21:52:36.986688 [ 775 ] {} <Error> TCPHandler: Code: 32. DB::Exception: Attempt to read after eof. (ATTEMPT_TO_READ_AFTER_EOF), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000009c833ab
3. DB::throwReadAfterEOF() @ 0x000000000f3add8f
4. DB::TCPHandler::receivePacketsExpectData(DB::QueryState&) @ 0x000000001490fbd5
5. DB::TCPHandler::processInsertQuery(DB::QueryState&) @ 0x0000000014905383
6. DB::TCPHandler::runImpl() @ 0x00000000148f5c48
7. DB::TCPHandler::run() @ 0x00000000149147f9
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f9b5ca27ac3
13. ? @ 0x00007f9b5cab9850

2025.05.21 21:52:40.895669 [ 775 ] {e2df2c5c-7e7a-47af-b985-e3c947c63cae} <Error> executeQuery: Code: 32. DB::Exception: Attempt to read after eof. (ATTEMPT_TO_READ_AFTER_EOF) (version 25.4.4.25 (official build)) (from 172.18.0.15:46744) (in query:  INSERT INTO reports ( shop_id, country, city, admin_id, courier_id, product_id, product_name, category_id, category_name, quantity, accepted_time ) VALUES ), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000009c833ab
3. DB::throwReadAfterEOF() @ 0x000000000f3add8f
4. DB::TCPHandler::receivePacketsExpectData(DB::QueryState&) @ 0x000000001490fbd5
5. DB::TCPHandler::processInsertQuery(DB::QueryState&) @ 0x0000000014905383
6. DB::TCPHandler::runImpl() @ 0x00000000148f5c48
7. DB::TCPHandler::run() @ 0x00000000149147f9
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f9b5ca27ac3
13. ? @ 0x00007f9b5cab9850

2025.05.21 21:52:40.896662 [ 775 ] {e2df2c5c-7e7a-47af-b985-e3c947c63cae} <Error> TCPHandler: Can't send logs or exception to client. Close connection.: Code: 32. DB::Exception: Attempt to read after eof. (ATTEMPT_TO_READ_AFTER_EOF), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000009c833ab
3. DB::throwReadAfterEOF() @ 0x000000000f3add8f
4. DB::TCPHandler::receivePacketsExpectData(DB::QueryState&) @ 0x000000001490fbd5
5. DB::TCPHandler::skipData(DB::QueryState&) @ 0x0000000014906af0
6. DB::TCPHandler::runImpl() @ 0x00000000148f6cd1
7. DB::TCPHandler::run() @ 0x00000000149147f9
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f9b5ca27ac3
13. ? @ 0x00007f9b5cab9850
 (version 25.4.4.25 (official build))
2025.05.21 21:52:40.897472 [ 775 ] {} <Error> TCPHandler: Code: 32. DB::Exception: Attempt to read after eof. (ATTEMPT_TO_READ_AFTER_EOF), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000009c833ab
3. DB::throwReadAfterEOF() @ 0x000000000f3add8f
4. DB::TCPHandler::receivePacketsExpectData(DB::QueryState&) @ 0x000000001490fbd5
5. DB::TCPHandler::processInsertQuery(DB::QueryState&) @ 0x0000000014905383
6. DB::TCPHandler::runImpl() @ 0x00000000148f5c48
7. DB::TCPHandler::run() @ 0x00000000149147f9
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f9b5ca27ac3
13. ? @ 0x00007f9b5cab9850

2025.05.21 21:52:42.636500 [ 775 ] {fe5d77ec-3fa4-4c9b-9f99-fdf91caf47bd} <Error> executeQuery: Code: 32. DB::Exception: Attempt to read after eof. (ATTEMPT_TO_READ_AFTER_EOF) (version 25.4.4.25 (official build)) (from 172.18.0.17:45560) (in query:  INSERT INTO reports ( shop_id, country, city, admin_id, courier_id, product_id, product_name, category_id, category_name, quantity, accepted_time ) VALUES ), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000009c833ab
3. DB::throwReadAfterEOF() @ 0x000000000f3add8f
4. DB::TCPHandler::receivePacketsExpectData(DB::QueryState&) @ 0x000000001490fbd5
5. DB::TCPHandler::processInsertQuery(DB::QueryState&) @ 0x0000000014905383
6. DB::TCPHandler::runImpl() @ 0x00000000148f5c48
7. DB::TCPHandler::run() @ 0x00000000149147f9
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f9b5ca27ac3
13. ? @ 0x00007f9b5cab9850

2025.05.21 21:52:42.639109 [ 775 ] {fe5d77ec-3fa4-4c9b-9f99-fdf91caf47bd} <Error> TCPHandler: Can't send logs or exception to client. Close connection.: Code: 32. DB::Exception: Attempt to read after eof. (ATTEMPT_TO_READ_AFTER_EOF), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000009c833ab
3. DB::throwReadAfterEOF() @ 0x000000000f3add8f
4. DB::TCPHandler::receivePacketsExpectData(DB::QueryState&) @ 0x000000001490fbd5
5. DB::TCPHandler::skipData(DB::QueryState&) @ 0x0000000014906af0
6. DB::TCPHandler::runImpl() @ 0x00000000148f6cd1
7. DB::TCPHandler::run() @ 0x00000000149147f9
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f9b5ca27ac3
13. ? @ 0x00007f9b5cab9850
 (version 25.4.4.25 (official build))
2025.05.21 21:52:42.642613 [ 775 ] {} <Error> TCPHandler: Code: 32. DB::Exception: Attempt to read after eof. (ATTEMPT_TO_READ_AFTER_EOF), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000009c833ab
3. DB::throwReadAfterEOF() @ 0x000000000f3add8f
4. DB::TCPHandler::receivePacketsExpectData(DB::QueryState&) @ 0x000000001490fbd5
5. DB::TCPHandler::processInsertQuery(DB::QueryState&) @ 0x0000000014905383
6. DB::TCPHandler::runImpl() @ 0x00000000148f5c48
7. DB::TCPHandler::run() @ 0x00000000149147f9
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f9b5ca27ac3
13. ? @ 0x00007f9b5cab9850

2025.05.21 21:52:42.722663 [ 775 ] {36968c1f-5fc8-459e-9e66-777fa9958cd4} <Error> executeQuery: Code: 32. DB::Exception: Attempt to read after eof. (ATTEMPT_TO_READ_AFTER_EOF) (version 25.4.4.25 (official build)) (from 172.18.0.16:44788) (in query:  INSERT INTO reports ( shop_id, country, city, admin_id, courier_id, product_id, product_name, category_id, category_name, quantity, accepted_time ) VALUES ), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000009c833ab
3. DB::throwReadAfterEOF() @ 0x000000000f3add8f
4. DB::TCPHandler::receivePacketsExpectData(DB::QueryState&) @ 0x000000001490fbd5
5. DB::TCPHandler::processInsertQuery(DB::QueryState&) @ 0x0000000014905383
6. DB::TCPHandler::runImpl() @ 0x00000000148f5c48
7. DB::TCPHandler::run() @ 0x00000000149147f9
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f9b5ca27ac3
13. ? @ 0x00007f9b5cab9850

2025.05.21 21:52:42.727666 [ 775 ] {36968c1f-5fc8-459e-9e66-777fa9958cd4} <Error> TCPHandler: Can't send logs or exception to client. Close connection.: Code: 32. DB::Exception: Attempt to read after eof. (ATTEMPT_TO_READ_AFTER_EOF), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000009c833ab
3. DB::throwReadAfterEOF() @ 0x000000000f3add8f
4. DB::TCPHandler::receivePacketsExpectData(DB::QueryState&) @ 0x000000001490fbd5
5. DB::TCPHandler::skipData(DB::QueryState&) @ 0x0000000014906af0
6. DB::TCPHandler::runImpl() @ 0x00000000148f6cd1
7. DB::TCPHandler::run() @ 0x00000000149147f9
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f9b5ca27ac3
13. ? @ 0x00007f9b5cab9850
 (version 25.4.4.25 (official build))
2025.05.21 21:52:42.728392 [ 775 ] {} <Error> TCPHandler: Code: 32. DB::Exception: Attempt to read after eof. (ATTEMPT_TO_READ_AFTER_EOF), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000009c833ab
3. DB::throwReadAfterEOF() @ 0x000000000f3add8f
4. DB::TCPHandler::receivePacketsExpectData(DB::QueryState&) @ 0x000000001490fbd5
5. DB::TCPHandler::processInsertQuery(DB::QueryState&) @ 0x0000000014905383
6. DB::TCPHandler::runImpl() @ 0x00000000148f5c48
7. DB::TCPHandler::run() @ 0x00000000149147f9
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f9b5ca27ac3
13. ? @ 0x00007f9b5cab9850

2025.05.21 21:52:47.749026 [ 775 ] {af61c008-6b77-4e3b-b0e1-f5bd1d5893d9} <Error> executeQuery: Code: 32. DB::Exception: Attempt to read after eof. (ATTEMPT_TO_READ_AFTER_EOF) (version 25.4.4.25 (official build)) (from 172.18.0.15:40292) (in query:  INSERT INTO reports ( shop_id, country, city, admin_id, courier_id, product_id, product_name, category_id, category_name, quantity, accepted_time ) VALUES ), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000009c833ab
3. DB::throwReadAfterEOF() @ 0x000000000f3add8f
4. DB::TCPHandler::receivePacketsExpectData(DB::QueryState&) @ 0x000000001490fbd5
5. DB::TCPHandler::processInsertQuery(DB::QueryState&) @ 0x0000000014905383
6. DB::TCPHandler::runImpl() @ 0x00000000148f5c48
7. DB::TCPHandler::run() @ 0x00000000149147f9
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f9b5ca27ac3
13. ? @ 0x00007f9b5cab9850

2025.05.21 21:52:47.750555 [ 775 ] {af61c008-6b77-4e3b-b0e1-f5bd1d5893d9} <Error> TCPHandler: Can't send logs or exception to client. Close connection.: Code: 32. DB::Exception: Attempt to read after eof. (ATTEMPT_TO_READ_AFTER_EOF), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000009c833ab
3. DB::throwReadAfterEOF() @ 0x000000000f3add8f
4. DB::TCPHandler::receivePacketsExpectData(DB::QueryState&) @ 0x000000001490fbd5
5. DB::TCPHandler::skipData(DB::QueryState&) @ 0x0000000014906af0
6. DB::TCPHandler::runImpl() @ 0x00000000148f6cd1
7. DB::TCPHandler::run() @ 0x00000000149147f9
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f9b5ca27ac3
13. ? @ 0x00007f9b5cab9850
 (version 25.4.4.25 (official build))
2025.05.21 21:52:47.755246 [ 775 ] {} <Error> TCPHandler: Code: 32. DB::Exception: Attempt to read after eof. (ATTEMPT_TO_READ_AFTER_EOF), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000009c833ab
3. DB::throwReadAfterEOF() @ 0x000000000f3add8f
4. DB::TCPHandler::receivePacketsExpectData(DB::QueryState&) @ 0x000000001490fbd5
5. DB::TCPHandler::processInsertQuery(DB::QueryState&) @ 0x0000000014905383
6. DB::TCPHandler::runImpl() @ 0x00000000148f5c48
7. DB::TCPHandler::run() @ 0x00000000149147f9
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f9b5ca27ac3
13. ? @ 0x00007f9b5cab9850

2025.05.21 21:52:50.141213 [ 775 ] {c1b6c00b-5594-417d-87f0-b08466de02fd} <Error> executeQuery: Code: 32. DB::Exception: Attempt to read after eof. (ATTEMPT_TO_READ_AFTER_EOF) (version 25.4.4.25 (official build)) (from 172.18.0.16:32772) (in query:  INSERT INTO reports ( shop_id, country, city, admin_id, courier_id, product_id, product_name, category_id, category_name, quantity, accepted_time ) VALUES ), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000009c833ab
3. DB::throwReadAfterEOF() @ 0x000000000f3add8f
4. DB::TCPHandler::receivePacketsExpectData(DB::QueryState&) @ 0x000000001490fbd5
5. DB::TCPHandler::processInsertQuery(DB::QueryState&) @ 0x0000000014905383
6. DB::TCPHandler::runImpl() @ 0x00000000148f5c48
7. DB::TCPHandler::run() @ 0x00000000149147f9
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f9b5ca27ac3
13. ? @ 0x00007f9b5cab9850

2025.05.21 21:52:50.142594 [ 775 ] {c1b6c00b-5594-417d-87f0-b08466de02fd} <Error> TCPHandler: Can't send logs or exception to client. Close connection.: Code: 32. DB::Exception: Attempt to read after eof. (ATTEMPT_TO_READ_AFTER_EOF), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000009c833ab
3. DB::throwReadAfterEOF() @ 0x000000000f3add8f
4. DB::TCPHandler::receivePacketsExpectData(DB::QueryState&) @ 0x000000001490fbd5
5. DB::TCPHandler::skipData(DB::QueryState&) @ 0x0000000014906af0
6. DB::TCPHandler::runImpl() @ 0x00000000148f6cd1
7. DB::TCPHandler::run() @ 0x00000000149147f9
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f9b5ca27ac3
13. ? @ 0x00007f9b5cab9850
 (version 25.4.4.25 (official build))
2025.05.21 21:52:50.143445 [ 775 ] {} <Error> TCPHandler: Code: 32. DB::Exception: Attempt to read after eof. (ATTEMPT_TO_READ_AFTER_EOF), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000009c833ab
3. DB::throwReadAfterEOF() @ 0x000000000f3add8f
4. DB::TCPHandler::receivePacketsExpectData(DB::QueryState&) @ 0x000000001490fbd5
5. DB::TCPHandler::processInsertQuery(DB::QueryState&) @ 0x0000000014905383
6. DB::TCPHandler::runImpl() @ 0x00000000148f5c48
7. DB::TCPHandler::run() @ 0x00000000149147f9
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f9b5ca27ac3
13. ? @ 0x00007f9b5cab9850

2025.05.21 21:52:50.273558 [ 775 ] {d465ba42-4786-42a5-8b89-38391bb56b3b} <Error> executeQuery: Code: 32. DB::Exception: Attempt to read after eof. (ATTEMPT_TO_READ_AFTER_EOF) (version 25.4.4.25 (official build)) (from 172.18.0.17:46560) (in query:  INSERT INTO reports ( shop_id, country, city, admin_id, courier_id, product_id, product_name, category_id, category_name, quantity, accepted_time ) VALUES ), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000009c833ab
3. DB::throwReadAfterEOF() @ 0x000000000f3add8f
4. DB::TCPHandler::receivePacketsExpectData(DB::QueryState&) @ 0x000000001490fbd5
5. DB::TCPHandler::processInsertQuery(DB::QueryState&) @ 0x0000000014905383
6. DB::TCPHandler::runImpl() @ 0x00000000148f5c48
7. DB::TCPHandler::run() @ 0x00000000149147f9
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f9b5ca27ac3
13. ? @ 0x00007f9b5cab9850

2025.05.21 21:52:50.274698 [ 775 ] {d465ba42-4786-42a5-8b89-38391bb56b3b} <Error> TCPHandler: Can't send logs or exception to client. Close connection.: Code: 32. DB::Exception: Attempt to read after eof. (ATTEMPT_TO_READ_AFTER_EOF), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000009c833ab
3. DB::throwReadAfterEOF() @ 0x000000000f3add8f
4. DB::TCPHandler::receivePacketsExpectData(DB::QueryState&) @ 0x000000001490fbd5
5. DB::TCPHandler::skipData(DB::QueryState&) @ 0x0000000014906af0
6. DB::TCPHandler::runImpl() @ 0x00000000148f6cd1
7. DB::TCPHandler::run() @ 0x00000000149147f9
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f9b5ca27ac3
13. ? @ 0x00007f9b5cab9850
 (version 25.4.4.25 (official build))
2025.05.21 21:52:50.275563 [ 775 ] {} <Error> TCPHandler: Code: 32. DB::Exception: Attempt to read after eof. (ATTEMPT_TO_READ_AFTER_EOF), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000009c833ab
3. DB::throwReadAfterEOF() @ 0x000000000f3add8f
4. DB::TCPHandler::receivePacketsExpectData(DB::QueryState&) @ 0x000000001490fbd5
5. DB::TCPHandler::processInsertQuery(DB::QueryState&) @ 0x0000000014905383
6. DB::TCPHandler::runImpl() @ 0x00000000148f5c48
7. DB::TCPHandler::run() @ 0x00000000149147f9
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f9b5ca27ac3
13. ? @ 0x00007f9b5cab9850

2025.05.21 21:56:08.325170 [ 774 ] {2d1642f7-b290-47a0-9065-ab58c31bd3d7} <Error> executeQuery: Code: 62. DB::Exception: Syntax error: failed at position 212 (SELECT) (line 20, col 1): SELECT
	shop_id,
	country,
	city,
	admin_id,
	courier_id,
	product_id,
	product_name,
	category_id,
	category_name,
	quantity,
	... Expected one of: token, DoubleColon, OR, AND, IS NOT DISTINCT FROM, IS NULL, IS NOT NULL, BETWEEN, NOT BETWEEN, LIKE, ILIKE, NOT LIKE, NOT ILIKE, REGEXP, IN, NOT IN, GLOBAL IN, GLOBAL NOT IN, MOD, DIV, alias, AS, Comma, OFFSET, WITH TIES, BY, FETCH, LIMIT, SETTINGS, UNION, EXCEPT, INTERSECT, INTO OUTFILE, FORMAT, ParallelWithClause, PARALLEL WITH, end of query. (SYNTAX_ERROR) (version 25.4.4.25 (official build)) (from 172.18.0.1:42094) (in query:  /*TABIX_QUERY_ID_bVRDELED*/ SELECT shop_id, country, city, admin_id, courier_id, product_id, product_name, category_id, category_name, quantity, accepted_time FROM delivery.reports LIMIT 100 SELECT shop_id, country, city, admin_id, courier_id, product_id, product_name, category_id, category_name, quantity, accepted_time FROM delivery.orders LIMIT 100 FORMAT JSON ), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::createDeprecated(String const&, int, bool) @ 0x000000000f38aaad
2. DB::parseQueryAndMovePosition(DB::IParser&, char const*&, char const*, String const&, bool, unsigned long, unsigned long, unsigned long) @ 0x0000000015404552
3. DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&) @ 0x0000000013595505
4. DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, std::shared_ptr<DB::Context>, std::function<void (DB::QueryResultDetails const&)>, DB::QueryFlags, std::optional<DB::FormatSettings> const&, std::function<void (DB::IOutputFormat&, String const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::FormatSettings> const&)>) @ 0x000000001359f4a5
5. DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x0000000014866481
6. DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x000000001486a9e9
7. DB::HTTPServerConnection::run() @ 0x0000000014920baa
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f9b5ca27ac3
13. ? @ 0x00007f9b5cab9850

2025.05.21 21:56:08.326927 [ 774 ] {2d1642f7-b290-47a0-9065-ab58c31bd3d7} <Error> DynamicQueryHandler: Code: 62. DB::Exception: Syntax error: failed at position 212 (SELECT) (line 20, col 1): SELECT
	shop_id,
	country,
	city,
	admin_id,
	courier_id,
	product_id,
	product_name,
	category_id,
	category_name,
	quantity,
	... Expected one of: token, DoubleColon, OR, AND, IS NOT DISTINCT FROM, IS NULL, IS NOT NULL, BETWEEN, NOT BETWEEN, LIKE, ILIKE, NOT LIKE, NOT ILIKE, REGEXP, IN, NOT IN, GLOBAL IN, GLOBAL NOT IN, MOD, DIV, alias, AS, Comma, OFFSET, WITH TIES, BY, FETCH, LIMIT, SETTINGS, UNION, EXCEPT, INTERSECT, INTO OUTFILE, FORMAT, ParallelWithClause, PARALLEL WITH, end of query. (SYNTAX_ERROR), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::createDeprecated(String const&, int, bool) @ 0x000000000f38aaad
2. DB::parseQueryAndMovePosition(DB::IParser&, char const*&, char const*, String const&, bool, unsigned long, unsigned long, unsigned long) @ 0x0000000015404552
3. DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&) @ 0x0000000013595505
4. DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, std::shared_ptr<DB::Context>, std::function<void (DB::QueryResultDetails const&)>, DB::QueryFlags, std::optional<DB::FormatSettings> const&, std::function<void (DB::IOutputFormat&, String const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::FormatSettings> const&)>) @ 0x000000001359f4a5
5. DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x0000000014866481
6. DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x000000001486a9e9
7. DB::HTTPServerConnection::run() @ 0x0000000014920baa
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f9b5ca27ac3
13. ? @ 0x00007f9b5cab9850
 (version 25.4.4.25 (official build))
2025.05.21 21:56:19.776624 [ 774 ] {ddce6371-9d13-4774-9b65-58d67b940998} <Error> executeQuery: Code: 62. DB::Exception: Syntax error: failed at position 212 (SELECT) (line 20, col 1): SELECT
	shop_id,
	country,
	city,
	admin_id,
	courier_id,
	product_id,
	product_name,
	category_id,
	category_name,
	quantity,
	... Expected one of: token, DoubleColon, OR, AND, IS NOT DISTINCT FROM, IS NULL, IS NOT NULL, BETWEEN, NOT BETWEEN, LIKE, ILIKE, NOT LIKE, NOT ILIKE, REGEXP, IN, NOT IN, GLOBAL IN, GLOBAL NOT IN, MOD, DIV, alias, AS, Comma, OFFSET, WITH TIES, BY, FETCH, LIMIT, SETTINGS, UNION, EXCEPT, INTERSECT, INTO OUTFILE, FORMAT, ParallelWithClause, PARALLEL WITH, end of query. (SYNTAX_ERROR) (version 25.4.4.25 (official build)) (from 172.18.0.1:38164) (in query:  /*TABIX_QUERY_ID_eSeAMA1l*/ SELECT shop_id, country, city, admin_id, courier_id, product_id, product_name, category_id, category_name, quantity, accepted_time FROM delivery.reports LIMIT 100 SELECT shop_id, country, city, admin_id, courier_id, product_id, product_name, category_id, category_name, quantity, accepted_time FROM delivery.orders LIMIT 100 FORMAT JSON ), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::createDeprecated(String const&, int, bool) @ 0x000000000f38aaad
2. DB::parseQueryAndMovePosition(DB::IParser&, char const*&, char const*, String const&, bool, unsigned long, unsigned long, unsigned long) @ 0x0000000015404552
3. DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&) @ 0x0000000013595505
4. DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, std::shared_ptr<DB::Context>, std::function<void (DB::QueryResultDetails const&)>, DB::QueryFlags, std::optional<DB::FormatSettings> const&, std::function<void (DB::IOutputFormat&, String const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::FormatSettings> const&)>) @ 0x000000001359f4a5
5. DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x0000000014866481
6. DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x000000001486a9e9
7. DB::HTTPServerConnection::run() @ 0x0000000014920baa
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f9b5ca27ac3
13. ? @ 0x00007f9b5cab9850

2025.05.21 21:56:19.777997 [ 774 ] {ddce6371-9d13-4774-9b65-58d67b940998} <Error> DynamicQueryHandler: Code: 62. DB::Exception: Syntax error: failed at position 212 (SELECT) (line 20, col 1): SELECT
	shop_id,
	country,
	city,
	admin_id,
	courier_id,
	product_id,
	product_name,
	category_id,
	category_name,
	quantity,
	... Expected one of: token, DoubleColon, OR, AND, IS NOT DISTINCT FROM, IS NULL, IS NOT NULL, BETWEEN, NOT BETWEEN, LIKE, ILIKE, NOT LIKE, NOT ILIKE, REGEXP, IN, NOT IN, GLOBAL IN, GLOBAL NOT IN, MOD, DIV, alias, AS, Comma, OFFSET, WITH TIES, BY, FETCH, LIMIT, SETTINGS, UNION, EXCEPT, INTERSECT, INTO OUTFILE, FORMAT, ParallelWithClause, PARALLEL WITH, end of query. (SYNTAX_ERROR), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::createDeprecated(String const&, int, bool) @ 0x000000000f38aaad
2. DB::parseQueryAndMovePosition(DB::IParser&, char const*&, char const*, String const&, bool, unsigned long, unsigned long, unsigned long) @ 0x0000000015404552
3. DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&) @ 0x0000000013595505
4. DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, std::shared_ptr<DB::Context>, std::function<void (DB::QueryResultDetails const&)>, DB::QueryFlags, std::optional<DB::FormatSettings> const&, std::function<void (DB::IOutputFormat&, String const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::FormatSettings> const&)>) @ 0x000000001359f4a5
5. DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x0000000014866481
6. DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x000000001486a9e9
7. DB::HTTPServerConnection::run() @ 0x0000000014920baa
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f9b5ca27ac3
13. ? @ 0x00007f9b5cab9850
 (version 25.4.4.25 (official build))
2025.05.21 21:56:27.749842 [ 774 ] {355519cc-e2e1-4e3d-a45e-9c89f0d801c1} <Error> executeQuery: Code: 62. DB::Exception: Syntax error: failed at position 212 (SELECT) (line 20, col 1): SELECT
	shop_id,
	country,
	city,
	admin_id,
	courier_id,
	product_id,
	product_name,
	category_id,
	category_name,
	quantity,
	... Expected one of: token, DoubleColon, OR, AND, IS NOT DISTINCT FROM, IS NULL, IS NOT NULL, BETWEEN, NOT BETWEEN, LIKE, ILIKE, NOT LIKE, NOT ILIKE, REGEXP, IN, NOT IN, GLOBAL IN, GLOBAL NOT IN, MOD, DIV, alias, AS, Comma, OFFSET, WITH TIES, BY, FETCH, LIMIT, SETTINGS, UNION, EXCEPT, INTERSECT, INTO OUTFILE, FORMAT, ParallelWithClause, PARALLEL WITH, end of query. (SYNTAX_ERROR) (version 25.4.4.25 (official build)) (from 172.18.0.1:38164) (in query:  /*TABIX_QUERY_ID_WRFfvcb9*/ SELECT shop_id, country, city, admin_id, courier_id, product_id, product_name, category_id, category_name, quantity, accepted_time FROM delivery.reports LIMIT 100 SELECT shop_id, country, city, admin_id, courier_id, product_id, product_name, category_id, category_name, quantity, accepted_time FROM delivery.orders LIMIT 100 FORMAT JSON ), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::createDeprecated(String const&, int, bool) @ 0x000000000f38aaad
2. DB::parseQueryAndMovePosition(DB::IParser&, char const*&, char const*, String const&, bool, unsigned long, unsigned long, unsigned long) @ 0x0000000015404552
3. DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&) @ 0x0000000013595505
4. DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, std::shared_ptr<DB::Context>, std::function<void (DB::QueryResultDetails const&)>, DB::QueryFlags, std::optional<DB::FormatSettings> const&, std::function<void (DB::IOutputFormat&, String const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::FormatSettings> const&)>) @ 0x000000001359f4a5
5. DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x0000000014866481
6. DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x000000001486a9e9
7. DB::HTTPServerConnection::run() @ 0x0000000014920baa
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f9b5ca27ac3
13. ? @ 0x00007f9b5cab9850

2025.05.21 21:56:27.771183 [ 774 ] {355519cc-e2e1-4e3d-a45e-9c89f0d801c1} <Error> DynamicQueryHandler: Code: 62. DB::Exception: Syntax error: failed at position 212 (SELECT) (line 20, col 1): SELECT
	shop_id,
	country,
	city,
	admin_id,
	courier_id,
	product_id,
	product_name,
	category_id,
	category_name,
	quantity,
	... Expected one of: token, DoubleColon, OR, AND, IS NOT DISTINCT FROM, IS NULL, IS NOT NULL, BETWEEN, NOT BETWEEN, LIKE, ILIKE, NOT LIKE, NOT ILIKE, REGEXP, IN, NOT IN, GLOBAL IN, GLOBAL NOT IN, MOD, DIV, alias, AS, Comma, OFFSET, WITH TIES, BY, FETCH, LIMIT, SETTINGS, UNION, EXCEPT, INTERSECT, INTO OUTFILE, FORMAT, ParallelWithClause, PARALLEL WITH, end of query. (SYNTAX_ERROR), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::createDeprecated(String const&, int, bool) @ 0x000000000f38aaad
2. DB::parseQueryAndMovePosition(DB::IParser&, char const*&, char const*, String const&, bool, unsigned long, unsigned long, unsigned long) @ 0x0000000015404552
3. DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&) @ 0x0000000013595505
4. DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, std::shared_ptr<DB::Context>, std::function<void (DB::QueryResultDetails const&)>, DB::QueryFlags, std::optional<DB::FormatSettings> const&, std::function<void (DB::IOutputFormat&, String const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::FormatSettings> const&)>) @ 0x000000001359f4a5
5. DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x0000000014866481
6. DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x000000001486a9e9
7. DB::HTTPServerConnection::run() @ 0x0000000014920baa
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f9b5ca27ac3
13. ? @ 0x00007f9b5cab9850
 (version 25.4.4.25 (official build))
2025.05.21 22:58:19.094930 [ 85 ] {} <Warning> Application: Listen [0.0.0.0]:9009 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:9009 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 22:58:19.105619 [ 85 ] {} <Warning> Access(local_directory): File /var/lib/clickhouse/access/users.list doesn't exist
2025.05.21 22:58:19.105866 [ 85 ] {} <Warning> Access(local_directory): Recovering lists in directory /var/lib/clickhouse/access/
2025.05.21 22:58:19.118322 [ 85 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2025.05.21 22:58:19.119080 [ 85 ] {} <Warning> Context: Delay accounting is not enabled, OSIOWaitMicroseconds will not be gathered. You can enable it using `echo 1 > /proc/sys/kernel/task_delayacct` or by using sysctl.
2025.05.21 22:58:19.258626 [ 85 ] {} <Warning> Application: Listen [0.0.0.0]:8123 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:8123 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 22:58:19.259113 [ 85 ] {} <Warning> Application: Listen [0.0.0.0]:9000 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:9000 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 22:58:19.259659 [ 85 ] {} <Warning> Application: Listen [0.0.0.0]:9004 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:9004 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 22:58:19.260008 [ 85 ] {} <Warning> Application: Listen [0.0.0.0]:9005 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:9005 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 22:58:23.247250 [ 1 ] {} <Warning> Application: Listen [::]:9009 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 22:58:23.265447 [ 1 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2025.05.21 22:58:23.275804 [ 1 ] {} <Warning> Context: Delay accounting is not enabled, OSIOWaitMicroseconds will not be gathered. You can enable it using `echo 1 > /proc/sys/kernel/task_delayacct` or by using sysctl.
2025.05.21 22:58:23.485843 [ 1 ] {} <Warning> Application: Listen [::]:8123 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 22:58:23.491134 [ 1 ] {} <Warning> Application: Listen [::]:9000 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 22:58:23.494197 [ 1 ] {} <Warning> Application: Listen [::]:9004 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 22:58:23.499886 [ 1 ] {} <Warning> Application: Listen [::]:9005 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 23:08:24.672351 [ 790 ] {57609103-1b34-49b0-b98e-402d17a68db6} <Error> executeQuery: Code: 62. DB::Exception: Cannot parse expression of type UInt32 here: {'shop_id':3,'country':'Spain','city':'La Nucia','admin_id':10,'courier_id':1,'product_id':1,'product_name':'Set of 6 balancing stones','category_id':1,'categor: While executing ValuesBlockInputFormat. (SYNTAX_ERROR) (version 25.4.4.25 (official build)) (from 172.18.0.15:41750) (in query:  INSERT INTO reports ( shop_id, country, city, admin_id, courier_id, product_id, product_name, category_id, category_name, quantity, accepted_time ) VALUES ), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<String, std::basic_string_view<char, std::char_traits<char>>>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<std::basic_string_view<char, std::char_traits<char>>>::type>, String&&, std::basic_string_view<char, std::char_traits<char>>&&) @ 0x000000000e17148b
3. DB::ValuesBlockInputFormat::parseExpression(DB::IColumn&, unsigned long) @ 0x0000000014befae8
4. DB::ValuesBlockInputFormat::read() @ 0x0000000014bed742
5. DB::IInputFormat::generate() @ 0x00000000149bd656
6. DB::ISource::tryGenerate() @ 0x000000001499655e
7. DB::ISource::work() @ 0x0000000014996167
8. DB::ExecutionThreadContext::executeTask() @ 0x00000000149b2516
9. DB::PipelineExecutor::executeStepImpl(unsigned long, std::atomic<bool>*) @ 0x00000000149a5f23
10. DB::PipelineExecutor::execute(unsigned long, bool) @ 0x00000000149a4a25
11. DB::CompletedPipelineExecutor::execute() @ 0x00000000149a326f
12. DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, std::shared_ptr<DB::Context>, std::function<void (DB::QueryResultDetails const&)>, DB::QueryFlags, std::optional<DB::FormatSettings> const&, std::function<void (DB::IOutputFormat&, String const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::FormatSettings> const&)>) @ 0x000000001359fd14
13. DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x0000000014866481
14. DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x000000001486a9e9
15. DB::HTTPServerConnection::run() @ 0x0000000014920baa
16. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
17. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
18. Poco::PooledThread::run() @ 0x0000000017fe753b
19. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
20. ? @ 0x00007fa257d68ac3
21. ? @ 0x00007fa257dfa850

2025.05.21 23:08:24.680212 [ 790 ] {57609103-1b34-49b0-b98e-402d17a68db6} <Error> DynamicQueryHandler: Code: 62. DB::Exception: Cannot parse expression of type UInt32 here: {'shop_id':3,'country':'Spain','city':'La Nucia','admin_id':10,'courier_id':1,'product_id':1,'product_name':'Set of 6 balancing stones','category_id':1,'categor: While executing ValuesBlockInputFormat. (SYNTAX_ERROR), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<String, std::basic_string_view<char, std::char_traits<char>>>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<std::basic_string_view<char, std::char_traits<char>>>::type>, String&&, std::basic_string_view<char, std::char_traits<char>>&&) @ 0x000000000e17148b
3. DB::ValuesBlockInputFormat::parseExpression(DB::IColumn&, unsigned long) @ 0x0000000014befae8
4. DB::ValuesBlockInputFormat::read() @ 0x0000000014bed742
5. DB::IInputFormat::generate() @ 0x00000000149bd656
6. DB::ISource::tryGenerate() @ 0x000000001499655e
7. DB::ISource::work() @ 0x0000000014996167
8. DB::ExecutionThreadContext::executeTask() @ 0x00000000149b2516
9. DB::PipelineExecutor::executeStepImpl(unsigned long, std::atomic<bool>*) @ 0x00000000149a5f23
10. DB::PipelineExecutor::execute(unsigned long, bool) @ 0x00000000149a4a25
11. DB::CompletedPipelineExecutor::execute() @ 0x00000000149a326f
12. DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, std::shared_ptr<DB::Context>, std::function<void (DB::QueryResultDetails const&)>, DB::QueryFlags, std::optional<DB::FormatSettings> const&, std::function<void (DB::IOutputFormat&, String const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::FormatSettings> const&)>) @ 0x000000001359fd14
13. DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x0000000014866481
14. DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x000000001486a9e9
15. DB::HTTPServerConnection::run() @ 0x0000000014920baa
16. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
17. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
18. Poco::PooledThread::run() @ 0x0000000017fe753b
19. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
20. ? @ 0x00007fa257d68ac3
21. ? @ 0x00007fa257dfa850
 (version 25.4.4.25 (official build))
2025.05.21 23:08:24.737204 [ 791 ] {b4052dd2-a653-4b7f-a861-cfac19633f3e} <Error> executeQuery: Code: 62. DB::Exception: Cannot parse expression of type UInt32 here: {'shop_id':2,'country':'Germany','city':'Nurnberg','admin_id':6,'courier_id':1,'product_id':2,'product_name':'Water ball track','category_id':1,'category_name':: While executing ValuesBlockInputFormat. (SYNTAX_ERROR) (version 25.4.4.25 (official build)) (from 172.18.0.16:37964) (in query:  INSERT INTO reports ( shop_id, country, city, admin_id, courier_id, product_id, product_name, category_id, category_name, quantity, accepted_time ) VALUES ), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<String, std::basic_string_view<char, std::char_traits<char>>>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<std::basic_string_view<char, std::char_traits<char>>>::type>, String&&, std::basic_string_view<char, std::char_traits<char>>&&) @ 0x000000000e17148b
3. DB::ValuesBlockInputFormat::parseExpression(DB::IColumn&, unsigned long) @ 0x0000000014befae8
4. DB::ValuesBlockInputFormat::read() @ 0x0000000014bed742
5. DB::IInputFormat::generate() @ 0x00000000149bd656
6. DB::ISource::tryGenerate() @ 0x000000001499655e
7. DB::ISource::work() @ 0x0000000014996167
8. DB::ExecutionThreadContext::executeTask() @ 0x00000000149b2516
9. DB::PipelineExecutor::executeStepImpl(unsigned long, std::atomic<bool>*) @ 0x00000000149a5f23
10. DB::PipelineExecutor::execute(unsigned long, bool) @ 0x00000000149a4a25
11. DB::CompletedPipelineExecutor::execute() @ 0x00000000149a326f
12. DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, std::shared_ptr<DB::Context>, std::function<void (DB::QueryResultDetails const&)>, DB::QueryFlags, std::optional<DB::FormatSettings> const&, std::function<void (DB::IOutputFormat&, String const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::FormatSettings> const&)>) @ 0x000000001359fd14
13. DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x0000000014866481
14. DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x000000001486a9e9
15. DB::HTTPServerConnection::run() @ 0x0000000014920baa
16. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
17. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
18. Poco::PooledThread::run() @ 0x0000000017fe753b
19. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
20. ? @ 0x00007fa257d68ac3
21. ? @ 0x00007fa257dfa850

2025.05.21 23:08:24.762377 [ 791 ] {b4052dd2-a653-4b7f-a861-cfac19633f3e} <Error> DynamicQueryHandler: Code: 62. DB::Exception: Cannot parse expression of type UInt32 here: {'shop_id':2,'country':'Germany','city':'Nurnberg','admin_id':6,'courier_id':1,'product_id':2,'product_name':'Water ball track','category_id':1,'category_name':: While executing ValuesBlockInputFormat. (SYNTAX_ERROR), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<String, std::basic_string_view<char, std::char_traits<char>>>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<std::basic_string_view<char, std::char_traits<char>>>::type>, String&&, std::basic_string_view<char, std::char_traits<char>>&&) @ 0x000000000e17148b
3. DB::ValuesBlockInputFormat::parseExpression(DB::IColumn&, unsigned long) @ 0x0000000014befae8
4. DB::ValuesBlockInputFormat::read() @ 0x0000000014bed742
5. DB::IInputFormat::generate() @ 0x00000000149bd656
6. DB::ISource::tryGenerate() @ 0x000000001499655e
7. DB::ISource::work() @ 0x0000000014996167
8. DB::ExecutionThreadContext::executeTask() @ 0x00000000149b2516
9. DB::PipelineExecutor::executeStepImpl(unsigned long, std::atomic<bool>*) @ 0x00000000149a5f23
10. DB::PipelineExecutor::execute(unsigned long, bool) @ 0x00000000149a4a25
11. DB::CompletedPipelineExecutor::execute() @ 0x00000000149a326f
12. DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, std::shared_ptr<DB::Context>, std::function<void (DB::QueryResultDetails const&)>, DB::QueryFlags, std::optional<DB::FormatSettings> const&, std::function<void (DB::IOutputFormat&, String const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::FormatSettings> const&)>) @ 0x000000001359fd14
13. DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x0000000014866481
14. DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x000000001486a9e9
15. DB::HTTPServerConnection::run() @ 0x0000000014920baa
16. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
17. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
18. Poco::PooledThread::run() @ 0x0000000017fe753b
19. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
20. ? @ 0x00007fa257d68ac3
21. ? @ 0x00007fa257dfa850
 (version 25.4.4.25 (official build))
2025.05.21 23:08:25.327067 [ 792 ] {5b2ac41d-c1ad-4a5f-a7a0-d5c6b524f5f6} <Error> executeQuery: Code: 62. DB::Exception: Cannot parse expression of type UInt32 here: {'shop_id':1,'country':'Germany','city':'Berlin','admin_id':2,'courier_id':1,'product_id':1,'product_name':'Set of 6 balancing stones','category_id':1,'category: While executing ValuesBlockInputFormat. (SYNTAX_ERROR) (version 25.4.4.25 (official build)) (from 172.18.0.17:47802) (in query:  INSERT INTO reports ( shop_id, country, city, admin_id, courier_id, product_id, product_name, category_id, category_name, quantity, accepted_time ) VALUES ), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<String, std::basic_string_view<char, std::char_traits<char>>>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<std::basic_string_view<char, std::char_traits<char>>>::type>, String&&, std::basic_string_view<char, std::char_traits<char>>&&) @ 0x000000000e17148b
3. DB::ValuesBlockInputFormat::parseExpression(DB::IColumn&, unsigned long) @ 0x0000000014befae8
4. DB::ValuesBlockInputFormat::read() @ 0x0000000014bed742
5. DB::IInputFormat::generate() @ 0x00000000149bd656
6. DB::ISource::tryGenerate() @ 0x000000001499655e
7. DB::ISource::work() @ 0x0000000014996167
8. DB::ExecutionThreadContext::executeTask() @ 0x00000000149b2516
9. DB::PipelineExecutor::executeStepImpl(unsigned long, std::atomic<bool>*) @ 0x00000000149a5f23
10. DB::PipelineExecutor::execute(unsigned long, bool) @ 0x00000000149a4a25
11. DB::CompletedPipelineExecutor::execute() @ 0x00000000149a326f
12. DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, std::shared_ptr<DB::Context>, std::function<void (DB::QueryResultDetails const&)>, DB::QueryFlags, std::optional<DB::FormatSettings> const&, std::function<void (DB::IOutputFormat&, String const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::FormatSettings> const&)>) @ 0x000000001359fd14
13. DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x0000000014866481
14. DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x000000001486a9e9
15. DB::HTTPServerConnection::run() @ 0x0000000014920baa
16. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
17. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
18. Poco::PooledThread::run() @ 0x0000000017fe753b
19. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
20. ? @ 0x00007fa257d68ac3
21. ? @ 0x00007fa257dfa850

2025.05.21 23:08:25.337644 [ 792 ] {5b2ac41d-c1ad-4a5f-a7a0-d5c6b524f5f6} <Error> DynamicQueryHandler: Code: 62. DB::Exception: Cannot parse expression of type UInt32 here: {'shop_id':1,'country':'Germany','city':'Berlin','admin_id':2,'courier_id':1,'product_id':1,'product_name':'Set of 6 balancing stones','category_id':1,'category: While executing ValuesBlockInputFormat. (SYNTAX_ERROR), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<String, std::basic_string_view<char, std::char_traits<char>>>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<std::basic_string_view<char, std::char_traits<char>>>::type>, String&&, std::basic_string_view<char, std::char_traits<char>>&&) @ 0x000000000e17148b
3. DB::ValuesBlockInputFormat::parseExpression(DB::IColumn&, unsigned long) @ 0x0000000014befae8
4. DB::ValuesBlockInputFormat::read() @ 0x0000000014bed742
5. DB::IInputFormat::generate() @ 0x00000000149bd656
6. DB::ISource::tryGenerate() @ 0x000000001499655e
7. DB::ISource::work() @ 0x0000000014996167
8. DB::ExecutionThreadContext::executeTask() @ 0x00000000149b2516
9. DB::PipelineExecutor::executeStepImpl(unsigned long, std::atomic<bool>*) @ 0x00000000149a5f23
10. DB::PipelineExecutor::execute(unsigned long, bool) @ 0x00000000149a4a25
11. DB::CompletedPipelineExecutor::execute() @ 0x00000000149a326f
12. DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, std::shared_ptr<DB::Context>, std::function<void (DB::QueryResultDetails const&)>, DB::QueryFlags, std::optional<DB::FormatSettings> const&, std::function<void (DB::IOutputFormat&, String const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::FormatSettings> const&)>) @ 0x000000001359fd14
13. DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x0000000014866481
14. DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x000000001486a9e9
15. DB::HTTPServerConnection::run() @ 0x0000000014920baa
16. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
17. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
18. Poco::PooledThread::run() @ 0x0000000017fe753b
19. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
20. ? @ 0x00007fa257d68ac3
21. ? @ 0x00007fa257dfa850
 (version 25.4.4.25 (official build))
2025.05.21 23:09:41.827247 [ 792 ] {cdd5da6d-f16d-4c09-ba5f-388d5d6a0950} <Error> executeQuery: Code: 62. DB::Exception: Syntax error: failed at position 212 (SELECT) (line 20, col 1): SELECT
	shop_id,
	country,
	city,
	admin_id,
	courier_id,
	product_id,
	product_name,
	category_id,
	category_name,
	quantity,
	... Expected one of: token, DoubleColon, OR, AND, IS NOT DISTINCT FROM, IS NULL, IS NOT NULL, BETWEEN, NOT BETWEEN, LIKE, ILIKE, NOT LIKE, NOT ILIKE, REGEXP, IN, NOT IN, GLOBAL IN, GLOBAL NOT IN, MOD, DIV, alias, AS, Comma, OFFSET, WITH TIES, BY, FETCH, LIMIT, SETTINGS, UNION, EXCEPT, INTERSECT, INTO OUTFILE, FORMAT, ParallelWithClause, PARALLEL WITH, end of query. (SYNTAX_ERROR) (version 25.4.4.25 (official build)) (from 172.18.0.1:57854) (in query:  /*TABIX_QUERY_ID_dVRPDeQd*/ SELECT shop_id, country, city, admin_id, courier_id, product_id, product_name, category_id, category_name, quantity, accepted_time FROM delivery.reports LIMIT 100 SELECT shop_id, country, city, admin_id, courier_id, product_id, product_name, category_id, category_name, quantity, accepted_time FROM delivery.reports LIMIT 100 FORMAT JSON ), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::createDeprecated(String const&, int, bool) @ 0x000000000f38aaad
2. DB::parseQueryAndMovePosition(DB::IParser&, char const*&, char const*, String const&, bool, unsigned long, unsigned long, unsigned long) @ 0x0000000015404552
3. DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&) @ 0x0000000013595505
4. DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, std::shared_ptr<DB::Context>, std::function<void (DB::QueryResultDetails const&)>, DB::QueryFlags, std::optional<DB::FormatSettings> const&, std::function<void (DB::IOutputFormat&, String const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::FormatSettings> const&)>) @ 0x000000001359f4a5
5. DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x0000000014866481
6. DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x000000001486a9e9
7. DB::HTTPServerConnection::run() @ 0x0000000014920baa
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007fa257d68ac3
13. ? @ 0x00007fa257dfa850

2025.05.21 23:09:41.829650 [ 792 ] {cdd5da6d-f16d-4c09-ba5f-388d5d6a0950} <Error> DynamicQueryHandler: Code: 62. DB::Exception: Syntax error: failed at position 212 (SELECT) (line 20, col 1): SELECT
	shop_id,
	country,
	city,
	admin_id,
	courier_id,
	product_id,
	product_name,
	category_id,
	category_name,
	quantity,
	... Expected one of: token, DoubleColon, OR, AND, IS NOT DISTINCT FROM, IS NULL, IS NOT NULL, BETWEEN, NOT BETWEEN, LIKE, ILIKE, NOT LIKE, NOT ILIKE, REGEXP, IN, NOT IN, GLOBAL IN, GLOBAL NOT IN, MOD, DIV, alias, AS, Comma, OFFSET, WITH TIES, BY, FETCH, LIMIT, SETTINGS, UNION, EXCEPT, INTERSECT, INTO OUTFILE, FORMAT, ParallelWithClause, PARALLEL WITH, end of query. (SYNTAX_ERROR), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::createDeprecated(String const&, int, bool) @ 0x000000000f38aaad
2. DB::parseQueryAndMovePosition(DB::IParser&, char const*&, char const*, String const&, bool, unsigned long, unsigned long, unsigned long) @ 0x0000000015404552
3. DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&) @ 0x0000000013595505
4. DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, std::shared_ptr<DB::Context>, std::function<void (DB::QueryResultDetails const&)>, DB::QueryFlags, std::optional<DB::FormatSettings> const&, std::function<void (DB::IOutputFormat&, String const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::FormatSettings> const&)>) @ 0x000000001359f4a5
5. DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x0000000014866481
6. DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x000000001486a9e9
7. DB::HTTPServerConnection::run() @ 0x0000000014920baa
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007fa257d68ac3
13. ? @ 0x00007fa257dfa850
 (version 25.4.4.25 (official build))
2025.05.21 23:11:44.089543 [ 792 ] {e3fcda92-d170-4c0b-8657-9960b7377b1e} <Error> executeQuery: Code: 62. DB::Exception: Cannot parse expression of type UInt32 here: {'shop_id':2,'country':'Germany','city':'Nurnberg','admin_id':6,'courier_id':1,'product_id':1,'product_name':'Set of 6 balancing stones','category_id':1,'catego: While executing ValuesBlockInputFormat. (SYNTAX_ERROR) (version 25.4.4.25 (official build)) (from 172.18.0.17:34444) (in query:  INSERT INTO reports ( shop_id, country, city, admin_id, courier_id, product_id, product_name, category_id, category_name, quantity, accepted_time ) VALUES ), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<String, std::basic_string_view<char, std::char_traits<char>>>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<std::basic_string_view<char, std::char_traits<char>>>::type>, String&&, std::basic_string_view<char, std::char_traits<char>>&&) @ 0x000000000e17148b
3. DB::ValuesBlockInputFormat::parseExpression(DB::IColumn&, unsigned long) @ 0x0000000014befae8
4. DB::ValuesBlockInputFormat::read() @ 0x0000000014bed742
5. DB::IInputFormat::generate() @ 0x00000000149bd656
6. DB::ISource::tryGenerate() @ 0x000000001499655e
7. DB::ISource::work() @ 0x0000000014996167
8. DB::ExecutionThreadContext::executeTask() @ 0x00000000149b2516
9. DB::PipelineExecutor::executeStepImpl(unsigned long, std::atomic<bool>*) @ 0x00000000149a5f23
10. DB::PipelineExecutor::execute(unsigned long, bool) @ 0x00000000149a4a25
11. DB::CompletedPipelineExecutor::execute() @ 0x00000000149a326f
12. DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, std::shared_ptr<DB::Context>, std::function<void (DB::QueryResultDetails const&)>, DB::QueryFlags, std::optional<DB::FormatSettings> const&, std::function<void (DB::IOutputFormat&, String const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::FormatSettings> const&)>) @ 0x000000001359fd14
13. DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x0000000014866481
14. DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x000000001486a9e9
15. DB::HTTPServerConnection::run() @ 0x0000000014920baa
16. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
17. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
18. Poco::PooledThread::run() @ 0x0000000017fe753b
19. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
20. ? @ 0x00007fa257d68ac3
21. ? @ 0x00007fa257dfa850

2025.05.21 23:11:44.091227 [ 792 ] {e3fcda92-d170-4c0b-8657-9960b7377b1e} <Error> DynamicQueryHandler: Code: 62. DB::Exception: Cannot parse expression of type UInt32 here: {'shop_id':2,'country':'Germany','city':'Nurnberg','admin_id':6,'courier_id':1,'product_id':1,'product_name':'Set of 6 balancing stones','category_id':1,'catego: While executing ValuesBlockInputFormat. (SYNTAX_ERROR), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<String, std::basic_string_view<char, std::char_traits<char>>>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<std::basic_string_view<char, std::char_traits<char>>>::type>, String&&, std::basic_string_view<char, std::char_traits<char>>&&) @ 0x000000000e17148b
3. DB::ValuesBlockInputFormat::parseExpression(DB::IColumn&, unsigned long) @ 0x0000000014befae8
4. DB::ValuesBlockInputFormat::read() @ 0x0000000014bed742
5. DB::IInputFormat::generate() @ 0x00000000149bd656
6. DB::ISource::tryGenerate() @ 0x000000001499655e
7. DB::ISource::work() @ 0x0000000014996167
8. DB::ExecutionThreadContext::executeTask() @ 0x00000000149b2516
9. DB::PipelineExecutor::executeStepImpl(unsigned long, std::atomic<bool>*) @ 0x00000000149a5f23
10. DB::PipelineExecutor::execute(unsigned long, bool) @ 0x00000000149a4a25
11. DB::CompletedPipelineExecutor::execute() @ 0x00000000149a326f
12. DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, std::shared_ptr<DB::Context>, std::function<void (DB::QueryResultDetails const&)>, DB::QueryFlags, std::optional<DB::FormatSettings> const&, std::function<void (DB::IOutputFormat&, String const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::FormatSettings> const&)>) @ 0x000000001359fd14
13. DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x0000000014866481
14. DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x000000001486a9e9
15. DB::HTTPServerConnection::run() @ 0x0000000014920baa
16. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
17. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
18. Poco::PooledThread::run() @ 0x0000000017fe753b
19. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
20. ? @ 0x00007fa257d68ac3
21. ? @ 0x00007fa257dfa850
 (version 25.4.4.25 (official build))
2025.05.21 23:11:44.126211 [ 790 ] {b47fb0fc-2a55-4ff4-92e3-38f9c3a066cd} <Error> executeQuery: Code: 62. DB::Exception: Cannot parse expression of type UInt32 here: {'shop_id':3,'country':'Spain','city':'La Nucia','admin_id':10,'courier_id':1,'product_id':1,'product_name':'Set of 6 balancing stones','category_id':1,'categor: While executing ValuesBlockInputFormat. (SYNTAX_ERROR) (version 25.4.4.25 (official build)) (from 172.18.0.15:53604) (in query:  INSERT INTO reports ( shop_id, country, city, admin_id, courier_id, product_id, product_name, category_id, category_name, quantity, accepted_time ) VALUES ), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<String, std::basic_string_view<char, std::char_traits<char>>>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<std::basic_string_view<char, std::char_traits<char>>>::type>, String&&, std::basic_string_view<char, std::char_traits<char>>&&) @ 0x000000000e17148b
3. DB::ValuesBlockInputFormat::parseExpression(DB::IColumn&, unsigned long) @ 0x0000000014befae8
4. DB::ValuesBlockInputFormat::read() @ 0x0000000014bed742
5. DB::IInputFormat::generate() @ 0x00000000149bd656
6. DB::ISource::tryGenerate() @ 0x000000001499655e
7. DB::ISource::work() @ 0x0000000014996167
8. DB::ExecutionThreadContext::executeTask() @ 0x00000000149b2516
9. DB::PipelineExecutor::executeStepImpl(unsigned long, std::atomic<bool>*) @ 0x00000000149a5f23
10. DB::PipelineExecutor::execute(unsigned long, bool) @ 0x00000000149a4a25
11. DB::CompletedPipelineExecutor::execute() @ 0x00000000149a326f
12. DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, std::shared_ptr<DB::Context>, std::function<void (DB::QueryResultDetails const&)>, DB::QueryFlags, std::optional<DB::FormatSettings> const&, std::function<void (DB::IOutputFormat&, String const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::FormatSettings> const&)>) @ 0x000000001359fd14
13. DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x0000000014866481
14. DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x000000001486a9e9
15. DB::HTTPServerConnection::run() @ 0x0000000014920baa
16. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
17. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
18. Poco::PooledThread::run() @ 0x0000000017fe753b
19. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
20. ? @ 0x00007fa257d68ac3
21. ? @ 0x00007fa257dfa850

2025.05.21 23:11:44.127274 [ 790 ] {b47fb0fc-2a55-4ff4-92e3-38f9c3a066cd} <Error> DynamicQueryHandler: Code: 62. DB::Exception: Cannot parse expression of type UInt32 here: {'shop_id':3,'country':'Spain','city':'La Nucia','admin_id':10,'courier_id':1,'product_id':1,'product_name':'Set of 6 balancing stones','category_id':1,'categor: While executing ValuesBlockInputFormat. (SYNTAX_ERROR), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<String, std::basic_string_view<char, std::char_traits<char>>>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<std::basic_string_view<char, std::char_traits<char>>>::type>, String&&, std::basic_string_view<char, std::char_traits<char>>&&) @ 0x000000000e17148b
3. DB::ValuesBlockInputFormat::parseExpression(DB::IColumn&, unsigned long) @ 0x0000000014befae8
4. DB::ValuesBlockInputFormat::read() @ 0x0000000014bed742
5. DB::IInputFormat::generate() @ 0x00000000149bd656
6. DB::ISource::tryGenerate() @ 0x000000001499655e
7. DB::ISource::work() @ 0x0000000014996167
8. DB::ExecutionThreadContext::executeTask() @ 0x00000000149b2516
9. DB::PipelineExecutor::executeStepImpl(unsigned long, std::atomic<bool>*) @ 0x00000000149a5f23
10. DB::PipelineExecutor::execute(unsigned long, bool) @ 0x00000000149a4a25
11. DB::CompletedPipelineExecutor::execute() @ 0x00000000149a326f
12. DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, std::shared_ptr<DB::Context>, std::function<void (DB::QueryResultDetails const&)>, DB::QueryFlags, std::optional<DB::FormatSettings> const&, std::function<void (DB::IOutputFormat&, String const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::FormatSettings> const&)>) @ 0x000000001359fd14
13. DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x0000000014866481
14. DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x000000001486a9e9
15. DB::HTTPServerConnection::run() @ 0x0000000014920baa
16. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
17. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
18. Poco::PooledThread::run() @ 0x0000000017fe753b
19. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
20. ? @ 0x00007fa257d68ac3
21. ? @ 0x00007fa257dfa850
 (version 25.4.4.25 (official build))
2025.05.21 23:11:44.161970 [ 791 ] {597ecd1c-9e17-405d-958b-d851a37a1241} <Error> executeQuery: Code: 62. DB::Exception: Cannot parse expression of type UInt32 here: {'shop_id':1,'country':'Germany','city':'Berlin','admin_id':2,'courier_id':1,'product_id':2,'product_name':'Water ball track','category_id':1,'category_name':'B: While executing ValuesBlockInputFormat. (SYNTAX_ERROR) (version 25.4.4.25 (official build)) (from 172.18.0.16:55264) (in query:  INSERT INTO reports ( shop_id, country, city, admin_id, courier_id, product_id, product_name, category_id, category_name, quantity, accepted_time ) VALUES ), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<String, std::basic_string_view<char, std::char_traits<char>>>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<std::basic_string_view<char, std::char_traits<char>>>::type>, String&&, std::basic_string_view<char, std::char_traits<char>>&&) @ 0x000000000e17148b
3. DB::ValuesBlockInputFormat::parseExpression(DB::IColumn&, unsigned long) @ 0x0000000014befae8
4. DB::ValuesBlockInputFormat::read() @ 0x0000000014bed742
5. DB::IInputFormat::generate() @ 0x00000000149bd656
6. DB::ISource::tryGenerate() @ 0x000000001499655e
7. DB::ISource::work() @ 0x0000000014996167
8. DB::ExecutionThreadContext::executeTask() @ 0x00000000149b2516
9. DB::PipelineExecutor::executeStepImpl(unsigned long, std::atomic<bool>*) @ 0x00000000149a5f23
10. DB::PipelineExecutor::execute(unsigned long, bool) @ 0x00000000149a4a25
11. DB::CompletedPipelineExecutor::execute() @ 0x00000000149a326f
12. DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, std::shared_ptr<DB::Context>, std::function<void (DB::QueryResultDetails const&)>, DB::QueryFlags, std::optional<DB::FormatSettings> const&, std::function<void (DB::IOutputFormat&, String const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::FormatSettings> const&)>) @ 0x000000001359fd14
13. DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x0000000014866481
14. DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x000000001486a9e9
15. DB::HTTPServerConnection::run() @ 0x0000000014920baa
16. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
17. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
18. Poco::PooledThread::run() @ 0x0000000017fe753b
19. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
20. ? @ 0x00007fa257d68ac3
21. ? @ 0x00007fa257dfa850

2025.05.21 23:11:44.163479 [ 791 ] {597ecd1c-9e17-405d-958b-d851a37a1241} <Error> DynamicQueryHandler: Code: 62. DB::Exception: Cannot parse expression of type UInt32 here: {'shop_id':1,'country':'Germany','city':'Berlin','admin_id':2,'courier_id':1,'product_id':2,'product_name':'Water ball track','category_id':1,'category_name':'B: While executing ValuesBlockInputFormat. (SYNTAX_ERROR), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000009c76bec
2. DB::Exception::Exception<String, std::basic_string_view<char, std::char_traits<char>>>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<std::basic_string_view<char, std::char_traits<char>>>::type>, String&&, std::basic_string_view<char, std::char_traits<char>>&&) @ 0x000000000e17148b
3. DB::ValuesBlockInputFormat::parseExpression(DB::IColumn&, unsigned long) @ 0x0000000014befae8
4. DB::ValuesBlockInputFormat::read() @ 0x0000000014bed742
5. DB::IInputFormat::generate() @ 0x00000000149bd656
6. DB::ISource::tryGenerate() @ 0x000000001499655e
7. DB::ISource::work() @ 0x0000000014996167
8. DB::ExecutionThreadContext::executeTask() @ 0x00000000149b2516
9. DB::PipelineExecutor::executeStepImpl(unsigned long, std::atomic<bool>*) @ 0x00000000149a5f23
10. DB::PipelineExecutor::execute(unsigned long, bool) @ 0x00000000149a4a25
11. DB::CompletedPipelineExecutor::execute() @ 0x00000000149a326f
12. DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, std::shared_ptr<DB::Context>, std::function<void (DB::QueryResultDetails const&)>, DB::QueryFlags, std::optional<DB::FormatSettings> const&, std::function<void (DB::IOutputFormat&, String const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::FormatSettings> const&)>) @ 0x000000001359fd14
13. DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x0000000014866481
14. DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x000000001486a9e9
15. DB::HTTPServerConnection::run() @ 0x0000000014920baa
16. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
17. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
18. Poco::PooledThread::run() @ 0x0000000017fe753b
19. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
20. ? @ 0x00007fa257d68ac3
21. ? @ 0x00007fa257dfa850
 (version 25.4.4.25 (official build))
2025.05.21 23:20:21.647203 [ 80 ] {} <Warning> Application: Listen [0.0.0.0]:9009 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:9009 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 23:20:21.654281 [ 80 ] {} <Warning> Access(local_directory): File /var/lib/clickhouse/access/users.list doesn't exist
2025.05.21 23:20:21.654558 [ 80 ] {} <Warning> Access(local_directory): Recovering lists in directory /var/lib/clickhouse/access/
2025.05.21 23:20:21.665710 [ 80 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2025.05.21 23:20:21.666728 [ 80 ] {} <Warning> Context: Delay accounting is not enabled, OSIOWaitMicroseconds will not be gathered. You can enable it using `echo 1 > /proc/sys/kernel/task_delayacct` or by using sysctl.
2025.05.21 23:20:21.837432 [ 80 ] {} <Warning> Application: Listen [0.0.0.0]:8123 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:8123 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 23:20:21.837780 [ 80 ] {} <Warning> Application: Listen [0.0.0.0]:9000 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:9000 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 23:20:21.838004 [ 80 ] {} <Warning> Application: Listen [0.0.0.0]:9004 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:9004 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 23:20:21.838241 [ 80 ] {} <Warning> Application: Listen [0.0.0.0]:9005 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:9005 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 23:20:24.170323 [ 1 ] {} <Warning> Application: Listen [::]:9009 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 23:20:24.183037 [ 1 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2025.05.21 23:20:24.184328 [ 1 ] {} <Warning> Context: Delay accounting is not enabled, OSIOWaitMicroseconds will not be gathered. You can enable it using `echo 1 > /proc/sys/kernel/task_delayacct` or by using sysctl.
2025.05.21 23:20:24.295547 [ 1 ] {} <Warning> Application: Listen [::]:8123 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 23:20:24.295980 [ 1 ] {} <Warning> Application: Listen [::]:9000 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 23:20:24.296476 [ 1 ] {} <Warning> Application: Listen [::]:9004 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 23:20:24.296806 [ 1 ] {} <Warning> Application: Listen [::]:9005 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 23:21:10.403844 [ 770 ] {9952194c-6720-4920-8a8b-e33f33cec506} <Error> executeQuery: Code: 62. DB::Exception: Syntax error: failed at position 212 (SELECT) (line 20, col 1): SELECT
	shop_id,
	country,
	city,
	admin_id,
	courier_id,
	product_id,
	product_name,
	category_id,
	category_name,
	quantity,
	... Expected one of: token, DoubleColon, OR, AND, IS NOT DISTINCT FROM, IS NULL, IS NOT NULL, BETWEEN, NOT BETWEEN, LIKE, ILIKE, NOT LIKE, NOT ILIKE, REGEXP, IN, NOT IN, GLOBAL IN, GLOBAL NOT IN, MOD, DIV, alias, AS, Comma, OFFSET, WITH TIES, BY, FETCH, LIMIT, SETTINGS, UNION, EXCEPT, INTERSECT, INTO OUTFILE, FORMAT, ParallelWithClause, PARALLEL WITH, end of query. (SYNTAX_ERROR) (version 25.4.4.25 (official build)) (from 172.18.0.1:52380) (in query:  /*TABIX_QUERY_ID_KyUulR1Y*/ SELECT shop_id, country, city, admin_id, courier_id, product_id, product_name, category_id, category_name, quantity, accepted_time FROM delivery.reports LIMIT 100 SELECT shop_id, country, city, admin_id, courier_id, product_id, product_name, category_id, category_name, quantity, accepted_time FROM delivery.reports LIMIT 100 FORMAT JSON ), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::createDeprecated(String const&, int, bool) @ 0x000000000f38aaad
2. DB::parseQueryAndMovePosition(DB::IParser&, char const*&, char const*, String const&, bool, unsigned long, unsigned long, unsigned long) @ 0x0000000015404552
3. DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&) @ 0x0000000013595505
4. DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, std::shared_ptr<DB::Context>, std::function<void (DB::QueryResultDetails const&)>, DB::QueryFlags, std::optional<DB::FormatSettings> const&, std::function<void (DB::IOutputFormat&, String const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::FormatSettings> const&)>) @ 0x000000001359f4a5
5. DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x0000000014866481
6. DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x000000001486a9e9
7. DB::HTTPServerConnection::run() @ 0x0000000014920baa
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007fb76be90ac3
13. ? @ 0x00007fb76bf22850

2025.05.21 23:21:10.405145 [ 770 ] {9952194c-6720-4920-8a8b-e33f33cec506} <Error> DynamicQueryHandler: Code: 62. DB::Exception: Syntax error: failed at position 212 (SELECT) (line 20, col 1): SELECT
	shop_id,
	country,
	city,
	admin_id,
	courier_id,
	product_id,
	product_name,
	category_id,
	category_name,
	quantity,
	... Expected one of: token, DoubleColon, OR, AND, IS NOT DISTINCT FROM, IS NULL, IS NOT NULL, BETWEEN, NOT BETWEEN, LIKE, ILIKE, NOT LIKE, NOT ILIKE, REGEXP, IN, NOT IN, GLOBAL IN, GLOBAL NOT IN, MOD, DIV, alias, AS, Comma, OFFSET, WITH TIES, BY, FETCH, LIMIT, SETTINGS, UNION, EXCEPT, INTERSECT, INTO OUTFILE, FORMAT, ParallelWithClause, PARALLEL WITH, end of query. (SYNTAX_ERROR), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::createDeprecated(String const&, int, bool) @ 0x000000000f38aaad
2. DB::parseQueryAndMovePosition(DB::IParser&, char const*&, char const*, String const&, bool, unsigned long, unsigned long, unsigned long) @ 0x0000000015404552
3. DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&) @ 0x0000000013595505
4. DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, std::shared_ptr<DB::Context>, std::function<void (DB::QueryResultDetails const&)>, DB::QueryFlags, std::optional<DB::FormatSettings> const&, std::function<void (DB::IOutputFormat&, String const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::FormatSettings> const&)>) @ 0x000000001359f4a5
5. DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x0000000014866481
6. DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x000000001486a9e9
7. DB::HTTPServerConnection::run() @ 0x0000000014920baa
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007fb76be90ac3
13. ? @ 0x00007fb76bf22850
 (version 25.4.4.25 (official build))
2025.05.21 23:24:16.522587 [ 770 ] {986a00d8-9896-4426-9f52-df04522e25e2} <Error> executeQuery: Code: 62. DB::Exception: Syntax error: failed at position 37 (.): .errors . Expected one of: UNKNOWN, SHUTDOWN, KILL, SUSPEND, DROP DNS CACHE, DROP CONNECTIONS CACHE, PREWARM MARK CACHE, PREWARM PRIMARY INDEX CACHE, DROP MARK CACHE, DROP PRIMARY INDEX CACHE, DROP UNCOMPRESSED CACHE, DROP INDEX MARK CACHE, DROP INDEX UNCOMPRESSED CACHE, DROP VECTOR SIMILARITY INDEX CACHE, DROP MMAP CACHE, DROP QUERY CONDITION CACHE, DROP QUERY CACHE, DROP COMPILED EXPRESSION CACHE, DROP ICEBERG METADATA CACHE, DROP FILESYSTEM CACHE, DROP DISTRIBUTED CACHE, DROP DISTRIBUTED CACHE CONNECTIONS, DROP DISK METADATA CACHE, DROP PAGE CACHE, DROP SCHEMA CACHE, DROP FORMAT SCHEMA CACHE, DROP S3 CLIENT CACHE, STOP LISTEN, START LISTEN, RESTART REPLICAS, RESTART REPLICA, RESTORE REPLICA, WAIT LOADING PARTS, DROP REPLICA, DROP DATABASE REPLICA, DROP CATALOG REPLICA, JEMALLOC PURGE, JEMALLOC ENABLE PROFILE, JEMALLOC DISABLE PROFILE, JEMALLOC FLUSH PROFILE, SYNC REPLICA, SYNC DATABASE REPLICA, SYNC TRANSACTION LOG, SYNC FILE CACHE, REPLICA READY, REPLICA UNREADY, RELOAD DICTIONARY, RELOAD DICTIONARIES, RELOAD MODEL, RELOAD MODELS, RELOAD FUNCTION, RELOAD FUNCTIONS, RELOAD EMBEDDED DICTIONARIES, RELOAD CONFIG, RELOAD USERS, RELOAD ASYNCHRONOUS METRICS, RESTART DISK, STOP MERGES, START MERGES, STOP TTL MERGES, START TTL MERGES, STOP FETCHES, START FETCHES, STOP MOVES, START MOVES, STOP REPLICATED SENDS, START REPLICATED SENDS, STOP REPLICATION QUEUES, START REPLICATION QUEUES, STOP REPLICATED DDL QUERIES, START REPLICATED DDL QUERIES, FLUSH LOGS, FLUSH DISTRIBUTED, FLUSH ASYNC INSERT QUEUE, STOP DISTRIBUTED SENDS, START DISTRIBUTED SENDS, START THREAD FUZZER, STOP THREAD FUZZER, UNFREEZE, ENABLE FAILPOINT, DISABLE FAILPOINT, WAIT FAILPOINT, SYNC FILESYSTEM CACHE, STOP PULLING REPLICATION LOG, START PULLING REPLICATION LOG, STOP CLEANUP, START CLEANUP, RESET COVERAGE, REFRESH VIEW, WAIT VIEW, START VIEW, START VIEWS, START REPLICATED VIEW, STOP VIEW, STOP VIEWS, STOP REPLICATED VIEW, CANCEL VIEW, TEST VIEW, LOAD PRIMARY KEY, UNLOAD PRIMARY KEY, STOP VIRTUAL PARTS UPDATE, START VIRTUAL PARTS UPDATE, STOP REDUCE BLOCKING PARTS, START REDUCE BLOCKING PARTS, UNLOCK SNAPSHOT, END. (SYNTAX_ERROR) (version 25.4.4.25 (official build)) (from 172.18.0.1:38208) (in query:  /*TABIX_QUERY_ID_xLIjEiBr*/ system.errors ), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::createDeprecated(String const&, int, bool) @ 0x000000000f38aaad
2. DB::parseQueryAndMovePosition(DB::IParser&, char const*&, char const*, String const&, bool, unsigned long, unsigned long, unsigned long) @ 0x0000000015404552
3. DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&) @ 0x0000000013595505
4. DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, std::shared_ptr<DB::Context>, std::function<void (DB::QueryResultDetails const&)>, DB::QueryFlags, std::optional<DB::FormatSettings> const&, std::function<void (DB::IOutputFormat&, String const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::FormatSettings> const&)>) @ 0x000000001359f4a5
5. DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x0000000014866481
6. DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x000000001486a9e9
7. DB::HTTPServerConnection::run() @ 0x0000000014920baa
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007fb76be90ac3
13. ? @ 0x00007fb76bf22850

2025.05.21 23:24:16.524171 [ 770 ] {986a00d8-9896-4426-9f52-df04522e25e2} <Error> DynamicQueryHandler: Code: 62. DB::Exception: Syntax error: failed at position 37 (.): .errors . Expected one of: UNKNOWN, SHUTDOWN, KILL, SUSPEND, DROP DNS CACHE, DROP CONNECTIONS CACHE, PREWARM MARK CACHE, PREWARM PRIMARY INDEX CACHE, DROP MARK CACHE, DROP PRIMARY INDEX CACHE, DROP UNCOMPRESSED CACHE, DROP INDEX MARK CACHE, DROP INDEX UNCOMPRESSED CACHE, DROP VECTOR SIMILARITY INDEX CACHE, DROP MMAP CACHE, DROP QUERY CONDITION CACHE, DROP QUERY CACHE, DROP COMPILED EXPRESSION CACHE, DROP ICEBERG METADATA CACHE, DROP FILESYSTEM CACHE, DROP DISTRIBUTED CACHE, DROP DISTRIBUTED CACHE CONNECTIONS, DROP DISK METADATA CACHE, DROP PAGE CACHE, DROP SCHEMA CACHE, DROP FORMAT SCHEMA CACHE, DROP S3 CLIENT CACHE, STOP LISTEN, START LISTEN, RESTART REPLICAS, RESTART REPLICA, RESTORE REPLICA, WAIT LOADING PARTS, DROP REPLICA, DROP DATABASE REPLICA, DROP CATALOG REPLICA, JEMALLOC PURGE, JEMALLOC ENABLE PROFILE, JEMALLOC DISABLE PROFILE, JEMALLOC FLUSH PROFILE, SYNC REPLICA, SYNC DATABASE REPLICA, SYNC TRANSACTION LOG, SYNC FILE CACHE, REPLICA READY, REPLICA UNREADY, RELOAD DICTIONARY, RELOAD DICTIONARIES, RELOAD MODEL, RELOAD MODELS, RELOAD FUNCTION, RELOAD FUNCTIONS, RELOAD EMBEDDED DICTIONARIES, RELOAD CONFIG, RELOAD USERS, RELOAD ASYNCHRONOUS METRICS, RESTART DISK, STOP MERGES, START MERGES, STOP TTL MERGES, START TTL MERGES, STOP FETCHES, START FETCHES, STOP MOVES, START MOVES, STOP REPLICATED SENDS, START REPLICATED SENDS, STOP REPLICATION QUEUES, START REPLICATION QUEUES, STOP REPLICATED DDL QUERIES, START REPLICATED DDL QUERIES, FLUSH LOGS, FLUSH DISTRIBUTED, FLUSH ASYNC INSERT QUEUE, STOP DISTRIBUTED SENDS, START DISTRIBUTED SENDS, START THREAD FUZZER, STOP THREAD FUZZER, UNFREEZE, ENABLE FAILPOINT, DISABLE FAILPOINT, WAIT FAILPOINT, SYNC FILESYSTEM CACHE, STOP PULLING REPLICATION LOG, START PULLING REPLICATION LOG, STOP CLEANUP, START CLEANUP, RESET COVERAGE, REFRESH VIEW, WAIT VIEW, START VIEW, START VIEWS, START REPLICATED VIEW, STOP VIEW, STOP VIEWS, STOP REPLICATED VIEW, CANCEL VIEW, TEST VIEW, LOAD PRIMARY KEY, UNLOAD PRIMARY KEY, STOP VIRTUAL PARTS UPDATE, START VIRTUAL PARTS UPDATE, STOP REDUCE BLOCKING PARTS, START REDUCE BLOCKING PARTS, UNLOCK SNAPSHOT, END. (SYNTAX_ERROR), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::createDeprecated(String const&, int, bool) @ 0x000000000f38aaad
2. DB::parseQueryAndMovePosition(DB::IParser&, char const*&, char const*, String const&, bool, unsigned long, unsigned long, unsigned long) @ 0x0000000015404552
3. DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&) @ 0x0000000013595505
4. DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, std::shared_ptr<DB::Context>, std::function<void (DB::QueryResultDetails const&)>, DB::QueryFlags, std::optional<DB::FormatSettings> const&, std::function<void (DB::IOutputFormat&, String const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::FormatSettings> const&)>) @ 0x000000001359f4a5
5. DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x0000000014866481
6. DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x000000001486a9e9
7. DB::HTTPServerConnection::run() @ 0x0000000014920baa
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007fb76be90ac3
13. ? @ 0x00007fb76bf22850
 (version 25.4.4.25 (official build))
2025.05.21 23:39:42.685284 [ 86 ] {} <Warning> Application: Listen [0.0.0.0]:9009 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:9009 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 23:39:42.698031 [ 86 ] {} <Warning> Access(local_directory): File /var/lib/clickhouse/access/users.list doesn't exist
2025.05.21 23:39:42.698675 [ 86 ] {} <Warning> Access(local_directory): Recovering lists in directory /var/lib/clickhouse/access/
2025.05.21 23:39:42.727733 [ 86 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2025.05.21 23:39:42.729244 [ 86 ] {} <Warning> Context: Delay accounting is not enabled, OSIOWaitMicroseconds will not be gathered. You can enable it using `echo 1 > /proc/sys/kernel/task_delayacct` or by using sysctl.
2025.05.21 23:39:42.951006 [ 86 ] {} <Warning> Application: Listen [0.0.0.0]:8123 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:8123 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 23:39:42.951926 [ 86 ] {} <Warning> Application: Listen [0.0.0.0]:9000 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:9000 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 23:39:42.952640 [ 86 ] {} <Warning> Application: Listen [0.0.0.0]:9004 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:9004 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 23:39:42.953161 [ 86 ] {} <Warning> Application: Listen [0.0.0.0]:9005 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:9005 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 23:39:47.416802 [ 1 ] {} <Warning> Application: Listen [::]:9009 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 23:39:47.453294 [ 1 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2025.05.21 23:39:47.456276 [ 1 ] {} <Warning> Context: Delay accounting is not enabled, OSIOWaitMicroseconds will not be gathered. You can enable it using `echo 1 > /proc/sys/kernel/task_delayacct` or by using sysctl.
2025.05.21 23:39:47.690477 [ 1 ] {} <Warning> Application: Listen [::]:8123 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 23:39:47.691045 [ 1 ] {} <Warning> Application: Listen [::]:9000 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 23:39:47.691887 [ 1 ] {} <Warning> Application: Listen [::]:9004 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 23:39:47.693194 [ 1 ] {} <Warning> Application: Listen [::]:9005 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.21 23:57:16.423581 [ 782 ] {f7cfb42c-66cf-46ae-806c-47ce91a3953f} <Error> executeQuery: Code: 62. DB::Exception: Syntax error: failed at position 212 (SELECT) (line 20, col 1): SELECT
	hostname,
	type,
	event_date,
	event_time,
	event_time_microseconds,
	query_start_time,
	query_start_time_microseconds,
	query_du... Expected one of: token, DoubleColon, OR, AND, IS NOT DISTINCT FROM, IS NULL, IS NOT NULL, BETWEEN, NOT BETWEEN, LIKE, ILIKE, NOT LIKE, NOT ILIKE, REGEXP, IN, NOT IN, GLOBAL IN, GLOBAL NOT IN, MOD, DIV, alias, AS, Comma, OFFSET, WITH TIES, BY, FETCH, LIMIT, SETTINGS, UNION, EXCEPT, INTERSECT, INTO OUTFILE, FORMAT, ParallelWithClause, PARALLEL WITH, end of query. (SYNTAX_ERROR) (version 25.4.4.25 (official build)) (from 172.18.0.1:41490) (in query:  /*TABIX_QUERY_ID_T09MtmRa*/ SELECT shop_id, country, city, admin_id, courier_id, product_id, product_name, category_id, category_name, quantity, accepted_time FROM delivery.reports LIMIT 100 SELECT hostname, type, event_date, event_time, event_time_microseconds, query_start_time, query_start_time_microseconds, query_duration_ms, read_rows, read_bytes, written_rows, written_bytes, result_rows, result_bytes, memory_usage, current_database, query, formatted_query, normalized_query_hash, query_kind, databases, tables, columns, partitions, projections, views, exception_code, exception, stack_trace, is_initial_query, user, query_id, address, port, initial_user, initial_query_id, initial_address, initial_port, initial_query_start_time, initial_query_start_time_microseconds, interface, is_secure, os_user, client_hostname, client_name, client_revision, client_version_major, client_version_minor, client_version_patch, script_query_number, script_line_number, http_method, http_user_agent, http_referer, forwarded_for, quota_key, distributed_depth, revision, log_comment, thread_ids, peak_threads_usage, ProfileEvents, Settings, used_aggregate_functions, used_aggregate_function_combinators, used_database_engines, used_data_type_families, used_dictionaries, used_formats, used_functions, used_storages, used_table_functions, used_row_policies, used_privileges, missing_privileges, transaction_id, query_cache_usage, asynchronous_read_counters, ProfileEvents.Names, ProfileEvents.Values, Settings.Names, Settings.Values FROM system.query_log WHERE event_date=today() LIMIT 100 FORMAT JSON ), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::createDeprecated(String const&, int, bool) @ 0x000000000f38aaad
2. DB::parseQueryAndMovePosition(DB::IParser&, char const*&, char const*, String const&, bool, unsigned long, unsigned long, unsigned long) @ 0x0000000015404552
3. DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&) @ 0x0000000013595505
4. DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, std::shared_ptr<DB::Context>, std::function<void (DB::QueryResultDetails const&)>, DB::QueryFlags, std::optional<DB::FormatSettings> const&, std::function<void (DB::IOutputFormat&, String const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::FormatSettings> const&)>) @ 0x000000001359f4a5
5. DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x0000000014866481
6. DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x000000001486a9e9
7. DB::HTTPServerConnection::run() @ 0x0000000014920baa
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f239db8fac3
13. ? @ 0x00007f239dc21850

2025.05.21 23:57:16.426311 [ 782 ] {f7cfb42c-66cf-46ae-806c-47ce91a3953f} <Error> DynamicQueryHandler: Code: 62. DB::Exception: Syntax error: failed at position 212 (SELECT) (line 20, col 1): SELECT
	hostname,
	type,
	event_date,
	event_time,
	event_time_microseconds,
	query_start_time,
	query_start_time_microseconds,
	query_du... Expected one of: token, DoubleColon, OR, AND, IS NOT DISTINCT FROM, IS NULL, IS NOT NULL, BETWEEN, NOT BETWEEN, LIKE, ILIKE, NOT LIKE, NOT ILIKE, REGEXP, IN, NOT IN, GLOBAL IN, GLOBAL NOT IN, MOD, DIV, alias, AS, Comma, OFFSET, WITH TIES, BY, FETCH, LIMIT, SETTINGS, UNION, EXCEPT, INTERSECT, INTO OUTFILE, FORMAT, ParallelWithClause, PARALLEL WITH, end of query. (SYNTAX_ERROR), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000f2c34db
1. DB::Exception::createDeprecated(String const&, int, bool) @ 0x000000000f38aaad
2. DB::parseQueryAndMovePosition(DB::IParser&, char const*&, char const*, String const&, bool, unsigned long, unsigned long, unsigned long) @ 0x0000000015404552
3. DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&) @ 0x0000000013595505
4. DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, std::shared_ptr<DB::Context>, std::function<void (DB::QueryResultDetails const&)>, DB::QueryFlags, std::optional<DB::FormatSettings> const&, std::function<void (DB::IOutputFormat&, String const&, std::shared_ptr<DB::Context const> const&, std::optional<DB::FormatSettings> const&)>) @ 0x000000001359f4a5
5. DB::HTTPHandler::processQuery(DB::HTTPServerRequest&, DB::HTMLForm&, DB::HTTPServerResponse&, DB::HTTPHandler::Output&, std::optional<DB::CurrentThread::QueryScope>&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x0000000014866481
6. DB::HTTPHandler::handleRequest(DB::HTTPServerRequest&, DB::HTTPServerResponse&, StrongTypedef<unsigned long, ProfileEvents::EventTag> const&) @ 0x000000001486a9e9
7. DB::HTTPServerConnection::run() @ 0x0000000014920baa
8. Poco::Net::TCPServerConnection::start() @ 0x000000001801bdc7
9. Poco::Net::TCPServerDispatcher::run() @ 0x000000001801c219
10. Poco::PooledThread::run() @ 0x0000000017fe753b
11. Poco::ThreadImpl::runnableEntry(void*) @ 0x0000000017fe5a1d
12. ? @ 0x00007f239db8fac3
13. ? @ 0x00007f239dc21850
 (version 25.4.4.25 (official build))
2025.05.22 00:29:15.743851 [ 79 ] {} <Warning> Application: Listen [0.0.0.0]:9009 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:9009 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.22 00:29:15.753065 [ 79 ] {} <Warning> Access(local_directory): File /var/lib/clickhouse/access/users.list doesn't exist
2025.05.22 00:29:15.753358 [ 79 ] {} <Warning> Access(local_directory): Recovering lists in directory /var/lib/clickhouse/access/
2025.05.22 00:29:15.773259 [ 79 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2025.05.22 00:29:15.774927 [ 79 ] {} <Warning> Context: Delay accounting is not enabled, OSIOWaitMicroseconds will not be gathered. You can enable it using `echo 1 > /proc/sys/kernel/task_delayacct` or by using sysctl.
2025.05.22 00:29:16.025027 [ 79 ] {} <Warning> Application: Listen [0.0.0.0]:8123 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:8123 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.22 00:29:16.025940 [ 79 ] {} <Warning> Application: Listen [0.0.0.0]:9000 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:9000 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.22 00:29:16.026624 [ 79 ] {} <Warning> Application: Listen [0.0.0.0]:9004 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:9004 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.22 00:29:16.028280 [ 79 ] {} <Warning> Application: Listen [0.0.0.0]:9005 failed: Poco::Exception. Code: 1000, e.code() = 98, Net Exception: Address already in use: 0.0.0.0:9005 (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.22 01:53:50.207772 [ 1 ] {} <Warning> Application: Listen [::]:9009 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.22 01:53:50.231342 [ 1 ] {} <Warning> Context: Linux transparent hugepages are set to "always". Check /sys/kernel/mm/transparent_hugepage/enabled
2025.05.22 01:53:50.233249 [ 1 ] {} <Warning> Context: Delay accounting is not enabled, OSIOWaitMicroseconds will not be gathered. You can enable it using `echo 1 > /proc/sys/kernel/task_delayacct` or by using sysctl.
2025.05.22 01:53:50.947246 [ 1 ] {} <Warning> Application: Listen [::]:8123 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.22 01:53:50.947988 [ 1 ] {} <Warning> Application: Listen [::]:9000 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.22 01:53:50.948651 [ 1 ] {} <Warning> Application: Listen [::]:9004 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2025.05.22 01:53:50.949099 [ 1 ] {} <Warning> Application: Listen [::]:9005 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 25.4.4.25 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
